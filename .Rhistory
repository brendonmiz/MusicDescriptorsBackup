ylab = 'Contributions', #sortValues = TRUE,
ylim = c(1.2*min(signed.ctrI[,1]), 1.2*max(signed.ctrI[,1]))
) + ggtitle("Dimension 1", subtitle = 'Rows') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of columns for component 1
ctrJ.1 <- PrettyBarPlot2(CJlist.dim$Dim1,#[order(names(CJlist.dim$Dim1))],
threshold = 1 / NROW(signed.ctrJ),
font.size = 3,
color4bar = CJlist.dim$Dim1cols,  #cols4conts[which(abs(signed.ctrJ[,1]) > 1/nrow(signed.ctrJ))], # we need hex code
ylab = 'Contributions',
ylim = c(2.75*min(signed.ctrJ[,1]), 2*max(signed.ctrJ[,1]))
) + ggtitle("", subtitle = 'Columns') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of rows for component 2
ctrI.2 <- PrettyBarPlot2(CIlist.dim$Dim2,
threshold = 1 / NROW(signed.ctrI),
font.size = 3,
color4bar = col4exgrp[which(abs(signed.ctrI[,2]) > 1/nrow(signed.ctrI))] , # we need hex code
ylab = 'Contributions',
ylim = c(1.2*min(signed.ctrI[,2]), 1.2*max(signed.ctrI[,2]))
) + ggtitle("Dimension 2", subtitle = 'Rows') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of columns for component 2
ctrJ.2 <- PrettyBarPlot2(CJlist.dim$Dim2,
threshold = 1 / NROW(signed.ctrJ),
font.size = 3,
color4bar = CJlist.dim$Dim2cols, # we need hex code
ylab = 'Contributions',
ylim = c(2.5*min(signed.ctrJ[,2]), 3.5*max(signed.ctrJ[,2]))
) + ggtitle("", subtitle = 'Columns') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
grid.arrange(
as.grob(ctrI.1),as.grob(ctrJ.1),
as.grob(ctrI.2),as.grob(ctrJ.2),
ncol = 2,nrow = 2#, top = textGrob("Contributions, Qualities Survey", gp = gpar(fontsize = 18, font = 3))
)
#Ctr.IJ <- recordPlot()
#1 - blue, 2 - red, 3 - green, 4 - yellow
# plot contributions of rows for component 1
ctrI.1 <- PrettyBarPlot2(CIlist.dim$Dim1,
threshold = 1 / NROW(signed.ctrI),
font.size = 3,
color4bar = CIlist.dim$Dim1cols,  #col4exgrp[which(abs(signed.ctrI[,1]) > 1/nrow(signed.ctrI))] , # we need hex code
ylab = 'Contributions', #sortValues = TRUE,
ylim = c(1.2*min(signed.ctrI[,1]), 1.2*max(signed.ctrI[,1]))
) + ggtitle("Dimension 1", subtitle = 'Rows') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of columns for component 1
ctrJ.1 <- PrettyBarPlot2(CJlist.dim$Dim1,#[order(names(CJlist.dim$Dim1))],
threshold = 1 / NROW(signed.ctrJ),
font.size = 3,
color4bar = CJlist.dim$Dim1cols,  #cols4conts[which(abs(signed.ctrJ[,1]) > 1/nrow(signed.ctrJ))], # we need hex code
ylab = 'Contributions',
ylim = c(2.5*min(signed.ctrJ[,1]), 1.75*max(signed.ctrJ[,1]))
) + ggtitle("", subtitle = 'Columns') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of rows for component 2
ctrI.2 <- PrettyBarPlot2(CIlist.dim$Dim2,
threshold = 1 / NROW(signed.ctrI),
font.size = 3,
color4bar = col4exgrp[which(abs(signed.ctrI[,2]) > 1/nrow(signed.ctrI))] , # we need hex code
ylab = 'Contributions',
ylim = c(1.2*min(signed.ctrI[,2]), 1.2*max(signed.ctrI[,2]))
) + ggtitle("Dimension 2", subtitle = 'Rows') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of columns for component 2
ctrJ.2 <- PrettyBarPlot2(CJlist.dim$Dim2,
threshold = 1 / NROW(signed.ctrJ),
font.size = 3,
color4bar = CJlist.dim$Dim2cols, # we need hex code
ylab = 'Contributions',
ylim = c(2.4*min(signed.ctrJ[,2]), 3.5*max(signed.ctrJ[,2]))
) + ggtitle("", subtitle = 'Columns') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
grid.arrange(
as.grob(ctrI.1),as.grob(ctrJ.1),
as.grob(ctrI.2),as.grob(ctrJ.2),
ncol = 2,nrow = 2#, top = textGrob("Contributions, Qualities Survey", gp = gpar(fontsize = 18, font = 3))
)
#Ctr.IJ <- recordPlot()
#1 - blue, 2 - red, 3 - green, 4 - yellow
rm(list = ls())
load("catadatamusdim.RData")
load("adj.catadata.list.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")
source('~/GitHub/MusicDescriptorsBackup/barplot_sigonly.R')
dimcontingency <- catadata.list$contingency
adjcontingency <- adj.catadata.list$adjcontingency
dimcontingency <- dimcontingency[-c(6,14,17),]
dimcontingency <- dimcontingency[,order(colnames(dimcontingency))]
adjcontingency <- adjcontingency[-c(6,14),]
library(TExPosition)
library(TInPosition)
library(data4PCCAR)
pls.res <- tepPLS(dimcontingency, adjcontingency, DESIGN = adj.design$thedesign[-c(6,14)])
resPerm4PLSC <- perm4PLSC(dimcontingency, adjcontingency, nIter = 1000)
e1 <- pls.res$TExPosition.Data$eigs[1]
e2 <- pls.res$TExPosition.Data$eigs[2]
e3 <- pls.res$TExPosition.Data$eigs[3]
t1 <- pls.res$TExPosition.Data$t[1]
t2 <- pls.res$TExPosition.Data$t[2]
t3 <- pls.res$TExPosition.Data$t[3]
t4 <- pls.res$TExPosition.Data$t[4]
latvar.1 <- cbind(pls.res$TExPosition.Data$lx[,1],pls.res$TExPosition.Data$ly[,1])
colnames(latvar.1) <- c("Lx 1", "Ly 1")
zedesign <- adj.design$thedesign[-c(6,14)]
lescoleurs <- adj.design$ex.cols[-c(6,14)]
coleur4group <- adj.design$col4exgrp
rownames(latvar.1) <- c(1:5,7:13,15:16,18:30)
# compute means
lv.1.group <- getMeans(latvar.1, zedesign)
# get bootstrap intervals of groups
lv.1.group.boot <- Boot4Mean(latvar.1, zedesign)
colnames(lv.1.group.boot$BootCube) <- c("Lx 1", "Ly 1")
#Next, we can start plotting:
plot.lv1 <- createFactorMap(latvar.1,
col.points = lescoleurs,
col.labels = lescoleurs,
alpha.points = 0.8, alpha.labels = 0.8,
text.cex = 5, title = "Latent Variable Plot 1"
)
plot1.mean <- createFactorMap(lv.1.group,
col.points = coleur4group,
col.labels = coleur4group,
cex = 4,
pch = 17,
alpha.labels = 0.5,
text.cex = 6)
plot1.meanCI <- MakeCIEllipses(lv.1.group.boot$BootCube[,c(1:2),], # get the first two components
col = adj.design$col4exgrp,
names.of.factors = c("Lx 1", "Ly 1"), alpha.ellipse = .2,
alpha.line = 0, line.size = 0
)
plot1.ti <- MakeToleranceIntervals(latvar.1
, zedesign
, col = coleur4group
)
plot1 <- plot.lv1$zeMap_background + plot.lv1$zeMap_dots + plot.lv1$zeMap_text + plot1.ti +
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
#                      plot.subtitle = element_text(size = 10, face = "italic", family = "serif"))#plot1.meanCI
#           plot1.mean$zeMap_text +
latvar.2 <- cbind(pls.res$TExPosition.Data$lx[,2],pls.res$TExPosition.Data$ly[,2])
colnames(latvar.2) <- c("Lx 2", "Ly 2")
rownames(latvar.2) <- c(1:5,7:13,15:16,18:30)
# compute means
lv.2.group <- getMeans(latvar.2, zedesign)
# get bootstrap intervals of groups
lv.2.group.boot <- Boot4Mean(latvar.2, zedesign)
colnames(lv.2.group.boot$BootCube) <- c("Lx 2", "Ly 2")
#Next, we can start plotting:
plot.lv2 <- createFactorMap(latvar.2,
col.points = lescoleurs,
col.labels = lescoleurs,
alpha.points = 0.8, alpha.labels = 0.8,
text.cex = 5, title = "Latent Variable Plot 2"
)
plot2.mean <- createFactorMap(lv.2.group,
col.points = coleur4group,
col.labels = coleur4group,
cex = 4,
pch = 17,
alpha.labels = 0.5,
text.cex = 6)
plot2.meanCI <- MakeCIEllipses(lv.2.group.boot$BootCube[,c(1:2),], # get the first two components
col = coleur4group,
names.of.factors = c("Lx 2", "Ly 2"), alpha.ellipse = .2,
alpha.line = 0, line.size = 0
)
plot2.ti <- MakeToleranceIntervals(latvar.2
, zedesign
, col = coleur4group
)
plot2 <- plot.lv2$zeMap_background + plot.lv2$zeMap_dots + plot.lv2$zeMap_text + plot2.ti +
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
#                      plot.subtitle = element_text(size = 10, face = "italic", family = "serif"))#plot2.meanCI
#  plot2.mean$zeMap_text +
#grid.arrange(as.grob(plot1),
#             as.grob(plot2),
#             ncol = 2,nrow = 1
#             )
#plsc.fplot <- recordPlot()
ctri <- pls.res$TExPosition.Data$ci*sign(pls.res$TExPosition.Data$fi)
ctrj <- pls.res$TExPosition.Data$cj * sign(pls.res$TExPosition.Data$fj)
conts.sigonly <- barplot.sigonly(x = ctri,
y = ctrj,
th = "mean",
type = "cont")
#cavalcanti 1; 2, 5
contribution1colors <- c(rep("#000C02", 18), rep(wes_palettes$GrandBudapest2[4], 15))
contribution2colors <- c(rep("#000C02", 24), rep(wes_palettes$GrandBudapest2[4], 14))
contribution1 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim1,
threshold = conts.sigonly$t.hold$thr.tog,
ylim = c(1.5*min(conts.sigonly$data$Dim1), 1.5*max(conts.sigonly$data$Dim1)),
color4bar = contribution1colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the First Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
) + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
contribution2 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim2,
threshold = conts.sigonly$t.hold$thr.tog,
ylim =conts.sigonly$data$y.limits$ylims.tog$Dim2,
color4bar = contribution2colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the Second Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
)   + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
#grid.arrange(as.grob(contribution1),
#             as.grob(contribution2),
#             ncol = 1,nrow = 2
#             )
#contributionsplsc <- recordPlot()
grid.arrange(as.grob(contribution1),
as.grob(contribution2),
ncol = 1,nrow = 2
)
contribution1
ctri <- pls.res$TExPosition.Data$ci*sign(pls.res$TExPosition.Data$fi)
ctrj <- pls.res$TExPosition.Data$cj * sign(pls.res$TExPosition.Data$fj)
conts.sigonly <- barplot.sigonly(x = ctri,
y = ctrj,
th = "mean",
type = "cont")
#cavalcanti 1; 2, 5
contribution1colors <- c(rep("#000C02", 18), rep(wes_palettes$GrandBudapest2[4], 15))
contribution2colors <- c(rep("#000C02", 24), rep(wes_palettes$GrandBudapest2[4], 14))
contribution1 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim1,
threshold = conts.sigonly$t.hold$thr.tog,
ylim = c(1.5*min(conts.sigonly$data$Dim1), 1.5*max(conts.sigonly$data$Dim1)),
color4bar = contribution1colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the First Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
) + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
contribution2 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim2,
threshold = conts.sigonly$t.hold$thr.tog,
ylim =conts.sigonly$data$y.limits$ylims.tog$Dim2,
color4bar = contribution2colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the Second Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
)   + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
grid.arrange(as.grob(contribution1),
as.grob(contribution2),
ncol = 1,nrow = 2
)
#contributionsplsc <- recordPlot()
ctri <- pls.res$TExPosition.Data$ci*sign(pls.res$TExPosition.Data$fi)
ctrj <- pls.res$TExPosition.Data$cj * sign(pls.res$TExPosition.Data$fj)
conts.sigonly <- barplot.sigonly(x = ctri,
y = ctrj,
th = "mean",
type = "cont")
#cavalcanti 1; 2, 5
contribution1colors <- c(rep("#000C02", 18), rep(wes_palettes$GrandBudapest2[4], 15))
contribution2colors <- c(rep("#000C02", 24), rep(wes_palettes$GrandBudapest2[4], 14))
contribution1 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim1,
threshold = conts.sigonly$t.hold$thr.tog,
ylim = c(1.5*min(conts.sigonly$data$Dim1), 1.5*max(conts.sigonly$data$Dim1)),
color4bar = contribution1colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the First Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
) + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
contribution2 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim2,
threshold = conts.sigonly$t.hold$thr.tog,
ylim =c(1.5*min(conts.sigonly$data$Dim2), 1.5*max(conts.sigonly$data$Dim2)),
color4bar = contribution2colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the Second Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
)   + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
grid.arrange(as.grob(contribution1),
as.grob(contribution2),
ncol = 1,nrow = 2
)
#contributionsplsc <- recordPlot()
ctri <- pls.res$TExPosition.Data$ci*sign(pls.res$TExPosition.Data$fi)
ctrj <- pls.res$TExPosition.Data$cj * sign(pls.res$TExPosition.Data$fj)
conts.sigonly <- barplot.sigonly(x = ctri,
y = ctrj,
th = "mean",
type = "cont")
#cavalcanti 1; 2, 5
contribution1colors <- c(rep("#000C02", 18), rep(wes_palettes$GrandBudapest2[4], 15))
contribution2colors <- c(rep("#000C02", 24), rep(wes_palettes$GrandBudapest2[4], 14))
contribution1 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim1,
threshold = conts.sigonly$t.hold$thr.tog,
ylim = c(1.5*min(conts.sigonly$data$Dim1), 2*max(conts.sigonly$data$Dim1)),
color4bar = contribution1colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the First Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
) + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
contribution2 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim2,
threshold = conts.sigonly$t.hold$thr.tog,
ylim =c(1.2*min(conts.sigonly$data$Dim2), 2*max(conts.sigonly$data$Dim2)),
color4bar = contribution2colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the Second Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
)   + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
grid.arrange(as.grob(contribution1),
as.grob(contribution2),
ncol = 1,nrow = 2
)
#contributionsplsc <- recordPlot()
ctri <- pls.res$TExPosition.Data$ci*sign(pls.res$TExPosition.Data$fi)
ctrj <- pls.res$TExPosition.Data$cj * sign(pls.res$TExPosition.Data$fj)
conts.sigonly <- barplot.sigonly(x = ctri,
y = ctrj,
th = "mean",
type = "cont")
#cavalcanti 1; 2, 5
contribution1colors <- c(rep("#000C02", 18), rep(wes_palettes$GrandBudapest2[4], 15))
contribution2colors <- c(rep("#000C02", 24), rep(wes_palettes$GrandBudapest2[4], 14))
contribution1 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim1,
threshold = conts.sigonly$t.hold$thr.tog,
ylim = c(1.5*min(conts.sigonly$data$Dim1), 1.75*max(conts.sigonly$data$Dim1)),
color4bar = contribution1colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the First Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
) + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
contribution2 <- PrettyBarPlot2(bootratio = conts.sigonly$data$Dim2,
threshold = conts.sigonly$t.hold$thr.tog,
ylim =c(1.2*min(conts.sigonly$data$Dim2), 2*max(conts.sigonly$data$Dim2)),
color4bar = contribution2colors,
color4ns = "gray75",
plotnames = TRUE,
main = 'Contributions to the Second Latent Variables',
ylab = "Signed Contributions",
font.size = 3, line.col = "gray"
)   + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 16, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 16, face = "italic", family = "serif"))
grid.arrange(as.grob(contribution1),
as.grob(contribution2),
ncol = 1,nrow = 2
)
#contributionsplsc <- recordPlot()
rm(list = ls())
gc()
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed)
set.seed(42)
papaja::r_refs("r-references.bib")
rm(list = ls())
load("adj.catadata.list.RData")
load("excerptsdesign.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")
partcols <- adj.catadata.list$partcols
adjbrick <- adj.catadata.list$adjbrick
adj.contingency <- adj.catadata.list$adjcontingency
adjcols <- adj.catadata.list$adjcols
listofwords <- adj.catadata.list$listofwords
nat.factor <- partcols$nationality
col4nat <- nat.factor
nat.factor <- as.factor(nat.factor)
#cols$n.oc[nat.factor == "AM"] <- "#FF0000"
#cols$n.oc[nat.factor == "FR"] <- "#046C9A"
#cols$n.gc[1] <- "#FF0000"
#cols$n.gc[2] <- "#046C9A"
adjsym.cares <- epCA(adj.contingency,
symmetric = TRUE)
library("papaja")
suppressMessages(library(ExPosition))
suppressMessages(library(InPosition))
suppressMessages(library(MExPosition))
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
#library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
adjsym.cares <- epCA(adj.contingency,
symmetric = TRUE)
adjrenorm <- CARenormalization(adjsym.cares$ExPosition.Data$fi,
delta = adjsym.cares$ExPosition.Data$pdq$Dv,
singularValues = T,
masses = adjsym.cares$ExPosition.Data$M
)
FIsym.adj <- adjsym.cares$ExPosition.Data$fi
FIasym.adj <- adjrenorm$G_A
FJs.adj <- adjsym.cares$ExPosition.Data$fj
CAEigs.adj <- adjsym.cares$ExPosition.Data$eigs
# Bootstrapping
bootCA.adj <- Boot4PTCA(ZeDataCube = adjbrick,
fi = FIsym.adj,
fj = FJs.adj,
eigs = CAEigs.adj,
nf2keep = 3,
nBootIter = 1000)
# Compute Bootstrapped ratios
bootRatadj.I <- PTCA4CATA::boot.ratio.test(bootCA.adj$RowsBoot,
critical.value = 2)
bootRatadj.J <- PTCA4CATA::boot.ratio.test(bootCA.adj$ColumnsBoot,
critical.value = 2)
# Probabilities
probBRadj.I  <- bootRatadj.I$prob.boot.ratios
probBRadj.J  <- bootRatadj.J$prob.boot.ratios
# Permutation tests
#adjca.inf <- perm4PTCA(aCube = adjbrick,
#                       nIter = 1000,
#                       permType = 'byRows' ,
#                       Malinvaud = TRUE)
#Ind.Permu.adj    <- adjca.inf$permInertia
#InertiaFixed.adj <- adjca.inf$fixedInertia
#prob.cpt.lst.adj <- adjca.inf$MalinvaudQ['p-perm',]
# Get the p values for the components
#prob.cpt.adj <- (unlist(prob.cpt.lst.adj[2:length(prob.cpt.lst.adj)]))
#prob.cpt.adj[is.na(prob.cpt.adj)] <- 1
Cmat.adj <- createSymDist4PTCA(adjbrick)$CrossProduct
eigenCmat.adj <- eigen(Cmat.adj, symmetric = TRUE)
eig4Cmat.adj <-  eigenCmat.adj$values
tau4Cmat.adj <- round( (100*eig4Cmat.adj) / sum(eig4Cmat.adj))
nk       <- 3
F4Cmat.adj   <- eigenCmat.adj$vectors[,1:nk] %*% diag(eig4Cmat.adj[1:nk]^(1/2))
rownames(F4Cmat.adj) <- rownames(Cmat.adj)
ScreeInf <- PlotScree(ev = eig4Cmat.adj,
max.ev = NULL, alpha = 0.05,
col.ns = "#006D2C", col.sig = "#54278F", title = " ",
#title = "Participants Distance Analysis, Adjectives Survey: \nExplained Variance per Dimension",
plotKaiser = T)
a000.adj.screeRV <-  recordPlot()
adj.tau <- adjsym.cares$ExPosition.Data$t
`r round(sum(adj.tau[c(1,2)]))`
round(sum(adj.tau[c(1,2)]))
8777732368
??hclust
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed, dev = c("pdf", "png"))
set.seed(42)
papaja::r_refs("r-references.bib")
```{r analysis-preferences}
library("papaja")
library(ExPosition)
library(InPosition)
library(MExPosition)
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
library(apaTables)
library(pander)
library(flextable)
?hclust
