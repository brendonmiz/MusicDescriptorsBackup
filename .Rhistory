#simplexorder <- match(excerptedges, colnames(adj.contingency))
#zePoly.J <- PTCA4CATA::ggdrawPolygon(FJs.adj, order2draw = simplexorder)
vc.labels <- createxyLabels(resCA = adjsym.cares)
am.labels <- createxyLabels(resCA = adj.am.cares)
fr.labels <- createxyLabels(resCA = adj.fr.cares)
exmap.am <- createFactorMapIJ(am.FI,
am.FJ,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols$ex.oc,
col.labels.i = cols$ex.oc,
col.points.j = cols$adj.oc,
col.labels.j = cols$adj.oc,
text.cex.i = 5, text.cex.j = 3.5, font.face.j = 'italic'
)
exmap.fr <- createFactorMapIJ(fr.FI,
fr.FJ,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols$ex.oc,
col.labels.i = cols$ex.oc,
col.points.j = cols$adj.oc,
col.labels.j = cols$adj.oc,
text.cex.i = 5, text.cex.j = 3.5, font.face.j = 'italic'
)
mus.adj.am <- exmap.am$baseMap +
exmap.am$I_points +
exmap.am$I_labels +
exmap.am$J_points +
exmap.am$J_labels +
am.labels + ggtitle('American Participants')
mus.adj.fr <- exmap.fr$baseMap +
exmap.fr$I_points +
exmap.fr$I_labels +
exmap.fr$J_points +
exmap.fr$J_labels +
fr.labels + ggtitle('French Participants')
mus.adj.004 <- exmap$baseMap + #zePoly.J +
exmap$I_points +
exmap$I_labels +
exmap$J_points +
exmap$J_labels +
vc.labels + ggtitle('Symmetric Map of Row and Column Factor Scores')
grid.arrange(
as.grob(mus.adj.am),as.grob(mus.adj.fr),
ncol = 2,nrow = 1,
top = textGrob("Symmetric Maps of the Row and Column Factor Scores", gp = gpar(fontsize = 18, font = 3))
)
am_fr_adjmaps <- recordPlot()
print(mus.adj.004)
library(MExPosition)
adj4MFA <- abind(adj.cont.FR, adj.cont.AM, along = 2)
frvec <- t(as.data.frame(rep("FR", length.out = dim(adj.cont.FR)[2])))
amvec <- t(as.data.frame(rep("AM", length.out = dim(adj.cont.AM)[2])))
colnames(frvec) <- colnames(amvec) <- colnames(adj.cont.FR)
rownames(frvec) <- rownames(amvec) <- "group"
mfagroups <- abind(frvec, amvec, along = 2)
mfares <- mpMFA(adj4MFA, mfagroups)
renameCols <- function(x){
colnames(x) <- paste("Dimension", 1:ncol(x))
x
}
RVmat <- mfares$mexPosition.Data$InnerProduct$RVMatrix
#corrplot(RVmat, method = "color", addCoefasPercent = TRUE)
Eig4scree <- mfares$mexPosition.Data$Table$eigs
#mfascree <- PlotScree(Eig4scree, plotKaiser = TRUE)
MFA_FMap <- createFactorMap(
mfares$mexPosition.Data$Table$fi,
col.points = cols$ex.oc,
col.labels = cols$ex.oc,
alpha.points = .6,
pch = 17,
cex = 5,
display.labels = TRUE,
constraints = minmaxHelper4Partial(FactorScores = mfares$mexPosition.Data$Table$fi,
partialFactorScores = mfares$mexPosition.Data$Table$partial.fi.array)
)
label4Map <- createxyLabels.gen(1,2,
lambda = mfares$mexPosition.Data$Table$eigs,
tau = mfares$mexPosition.Data$Table$t,
axisName = "Dimension ")
fi4pfs <- mfares$mexPosition.Data$Table$fi
fi4pfs <- renameCols(fi4pfs)
pfi4pfs <- mfares$mexPosition.Data$Table$partial.fi.array
pfi4pfs <- renameCols(pfi4pfs)
rownames(pfi4pfs) <- c(1:30)
dimnames(pfi4pfs)[[3]] <- c("FR", "AM")
map4PFS <- createPartialFactorScoresMap(
factorScores = fi4pfs,
partialFactorScores = pfi4pfs,
axis1 = 1, axis2 = 2,
colors4Items = cols$ex.oc,
names4Partial = c("FR", "AM"),
font.labels = 'bold'
)
partialfsmap <- MFA_FMap$zeMap +
label4Map +
map4PFS$linesColByItems +
map4PFS$pointsColByItems +
map4PFS$labelsColByItems +
ggtitle("Contributions to the Excerpts Factor Scores")
adj4MFA.T <- abind(t(adj.cont.FR), t(adj.cont.AM), along = 2)
natvec <- rep(c("FR", "AM"), times = dim(adj4MFA.T)[2]/2)
natvec <- data.frame(natvec[order(natvec, decreasing = T)]) %>% t(.)
colnames(natvec) <- colnames(adj4MFA.T)
rownames(natvec) <- "group"
mfares.t <- mpMFA(adj4MFA.T, natvec)
RVmat.t <- mfares.t$mexPosition.Data$InnerProduct$RVMatrix
#corrplot(RVmat, method = "color", addCoefasPercent = TRUE)
Eig4scree <- mfares$mexPosition.Data$Table$eigs
#mfascree <- PlotScree(Eig4scree, plotKaiser = TRUE)
MFA_FMap.t <- createFactorMap(
mfares.t$mexPosition.Data$Table$fi,
col.points = cols$adj.oc,
col.labels = cols$adj.oc,
alpha.points = .6,
pch = 17,
cex = 5,
display.labels = TRUE,
constraints = minmaxHelper4Partial(FactorScores = mfares.t$mexPosition.Data$Table$fi,
partialFactorScores = mfares.t$mexPosition.Data$Table$partial.fi.array)
)
label4Map.t <- createxyLabels.gen(1,2,
lambda = mfares.t$mexPosition.Data$Table$eigs,
tau = mfares.t$mexPosition.Data$Table$t,
axisName = "Dimension ")
fi4pfs.t <- mfares.t$mexPosition.Data$Table$fi
fi4pfs.t <- renameCols(fi4pfs.t)
pfi4pfs.t <- mfares.t$mexPosition.Data$Table$partial.fi.array
pfi4pfs.t <- renameCols(pfi4pfs.t)
rownames(pfi4pfs.t) <- colnames(adj.contingency)
dimnames(pfi4pfs.t)[[3]] <- c("FR", "AM")
map4PFS.t <- createPartialFactorScoresMap(
factorScores = fi4pfs.t,
partialFactorScores = pfi4pfs.t,
axis1 = 1, axis2 = 2,
colors4Items = cols$adj.oc,
names4Partial = c("FR", "AM"),
font.labels = 'bold',
# alpha.lines = .75, size.lines = 3
)
partialfsmap.t <- MFA_FMap.t$zeMap +
label4Map.t +
map4PFS.t$linesColByItems +
map4PFS.t$pointsColByItems +
map4PFS.t$labelsColByItems +
ggtitle("Contributions to the Adjectives Factor Scores")
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants"))
mfasbs <- recordPlot()
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants"))
mfasbs <- recordPlot()
partialfsmap
partialfsmap
print(partialfsmap)
print(partialfsmap)
print(partialfsmap.t)
partialfsmap
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants"))
mfasbs <- recordPlot()
print(partialfsmap)
print(partialfsmap.t)
dev.off()
print(partialfsmap)
dev.off
dev.off()
dev.cur()
dev.off(12)
print(partialfsmap)
print(mus.adj.004)
dev.off()
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants"),
print.eval = TRUE)
dev.off()
print(partialfsmap)
print(partialfsmap.t)
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants"),
print.eval = TRUE)
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 2,
top = textGrob("Partial Factor Scores Plots for French and American Participants"),
print.eval = TRUE)
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants"),
)
library("papaja")
suppressMessages(library(ExPosition))
suppressMessages(library(InPosition))
suppressMessages(library(MExPosition))
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
#library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed)
set.seed(42)
papaja::r_refs("r-references.bib")
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1, arrangeGrob()
top = textGrob("Partial Factor Scores Plots for French and American Participants"),
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants"),
)
grid.arrange(as.grob(partialfsmap),
as.grob(partialfsmap.t),
ncol = 2, nrow = 1,
top = textGrob("Partial Factor Scores Plots for French and American Participants")
)
mfasbs <- recordPlot()
print(partialfsmap)
print(partialfsmap.t)
?createSymDist4PTCA
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed)
set.seed(42)
papaja::r_refs("r-references.bib")
library("papaja")
suppressMessages(library(ExPosition))
suppressMessages(library(InPosition))
suppressMessages(library(MExPosition))
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
#library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
powerpointFilename <- 'Music-Descriptor-Space.pptx'
path2pptx    <- './Analysis/'
name4Graphs  <- paste0(path2pptx,powerpointFilename)
title4Graphs <- 'Music Descriptor Space '
load("catadatamusdim.RData")
musdimdata <- catadata.list$contingency
numberofdims <- catadata.list$numberofdims
thebrick <- catadata.list$thebrick
rows2drop <- c(6,14)
musdimdata.no6 <- musdimdata[-rows2drop,]
thebrick.no6 <- thebrick[-rows2drop,,]
# reorder some of the columns in the french experts dataset,
# taking only the ones we want to analyse for now
fr.ex.data <- catadata.list$french.expert.data[c(1:3,6,7,9:12),c(1,4,5,6,7)]
colnames(fr.ex.data) <- c("age", "gen", "nat", "tr_yrs", "tr_type")
fr.ex.data$gen[which(fr.ex.data$gen == "Homme")] <- "M"
fr.ex.data$gen[which(fr.ex.data$gen == "Femme")] <- "F"
fr.ex.data$nat <- "FR"
fr.ex.data$tr_type[which(fr.ex.data$tr_type == "Instrumentale")] <- "Inst"
fr.ex.data$tr_type[which(fr.ex.data$tr_type == "Vocale")] <- "Voc"
am.ex.data <- catadata.list$expert.data[,c(1:3,6,7)]
colnames(am.ex.data) <- colnames(fr.ex.data)
am.ex.data$nat <- "AM"
am.ex.data$gen[which(am.ex.data$gen == "Male")] <- "M"
am.ex.data$gen[which(am.ex.data$gen == "Female")] <- "F"
am.ex.data$tr_type[which(am.ex.data$tr_type == "Instrumental")] <- "Inst"
am.ex.data$tr_type[which(am.ex.data$tr_type == "Vocal")] <- "Voc"
# Bind it all together
ex.data <- rbind(am.ex.data, fr.ex.data)
bygender <- as.factor(ex.data$gen)
bynationality <- as.factor(ex.data$nat)
dimcares.inf <- epCA.inference.battery(musdimdata.no6,
masses= NULL, weights= NULL,
hellinger = FALSE, symmetric = TRUE,
graphs =FALSE, test.iters = 1000)
# Renormalize the results of CA
#RenormFi <- CARenormalization(G = dimcares.inf$Fixed.Data$ExPosition.Data$fi,
#                  delta = dimcares.inf$Fixed.Data$ExPosition.Data$pdq$Dv,
#                  singularValues = TRUE,
#                  masses = NULL)
# Factor Scores
FIsym  <- dimcares.inf$Fixed.Data$ExPosition.Data$fi
#FIasym <- RenormFi$G_A
FJs    <- dimcares.inf$Fixed.Data$ExPosition.Data$fj
CA.Q.Eigs <- dimcares.inf$Fixed.Data$ExPosition.Data$eigs
CA.Q.pEig <- dimcares.inf$Inference.Data$components$eigs.perm
# Participant colors:
col4M <- wes_palettes$Rushmore1[3]
col4F <- wes_palettes$Rushmore1[5]
col4FR <- wes_palettes$Darjeeling1[1]
col4AM <- wes_palettes$Darjeeling2[2]
#
col4byG <- as.character(bygender)
col4byG[col4byG == "F"] <- col4F
col4byG[col4byG == "M"] <- col4M
col4byN <- as.character(bynationality)
col4byN[col4byN == "FR"] <- col4FR
col4byN[col4byN == "AM"] <- col4AM
# To account for the fact that we removed some rows above:
numberofdims[c(1,7,8,9,10)] <- c(8,7,3,4,6)
numberofdims <- numberofdims[-11]
col4cols <- wes_palette("FantasticFox1",
length(numberofdims), type = "continuous")
col4cols <- rep(col4cols, numberofdims)
bootCA <- Boot4PTCA(ZeDataCube = thebrick.no6,
fi = FIsym,
fj = FJs,
eigs = CA.Q.Eigs,
nf2keep = 3,
nBootIter = 500)
# Compute Bootstrapped ratios
bootRatios.I <- PTCA4CATA::boot.ratio.test(bootCA$RowsBoot,
critical.value = 2)
bootRatios.J <- PTCA4CATA::boot.ratio.test(bootCA$ColumnsBoot,
critical.value = 2)
# Probabilities
probBR.I  <- bootRatios.I$prob.boot.ratios
probBR.J  <- bootRatios.J$prob.boot.ratios
# We have a problem here because most matrices
#  have lines with zeros. A symmetric difference matrix
#  would do better than an RV or a
#  chi2 distance so we use createSymDist4PTCA
Cmat.Q <- createSymDist4PTCA(thebrick)$CrossProduct
# Calculate the eigenvalues and the percentage of variance extracted (tau)
eigenCmat.Q <- eigen(Cmat.Q, symmetric = TRUE)
eig4Cmat.Q <-  eigenCmat.Q$values
tau4Cmat.Q <- round( (100*eig4Cmat.Q) / sum(eig4Cmat.Q))
# Calculate factor scores for the first three dimensions
nk       <- 3
F4Cmat.Q   <- eigenCmat.Q$vectors[,1:nk] %*% diag(eig4Cmat.Q[1:nk]^(1/2))
# Prep for plotting
Shortnames4Participants.Q <-  dimnames(thebrick[[3]])
rownames(F4Cmat.Q) <- Shortnames4Participants.Q
# Make labels
labels4RV.Q <- createxyLabels.gen(1,2,lambda = eig4Cmat.Q, tau = tau4Cmat.Q)
# Scree plot with significance
ScreeInf <- PlotScree(ev = eig4Cmat.Q,
max.ev = NULL, alpha = 0.05,
col.ns = "#006D2C", plotKaiser = TRUE,
title = "Participants Distance Analysis, Musical Qualities Survey: \nExplained Variance per Dimension")
a000.00.screeRV <-  recordPlot()
BaseMap.Nationality <- createFactorMap(X = F4Cmat ,
axis1 = 1, axis2 = 2,
display.points = TRUE,
col.points = col4byN,
pch = 19, cex = 2.5,
title = "Colored according to Nationality",
display.labels = TRUE,
col.labels = col4byN,
text.cex = 4, font.face = "bold",
font.family = "sans",
col.axes = "darkorchid",
alpha.axes = 0.2,
width.axes = 1.1,
col.background = adjustcolor("lavender",
alpha.f = 0.2),
force = 1, segment.size = 3)
BaseMap.Nationality <- createFactorMap(X = F4Cmat.Q ,
axis1 = 1, axis2 = 2,
display.points = TRUE,
col.points = col4byN,
pch = 19, cex = 2.5,
title = "Colored according to Nationality",
display.labels = TRUE,
col.labels = col4byN,
text.cex = 4, font.face = "bold",
font.family = "sans",
col.axes = "darkorchid",
alpha.axes = 0.2,
width.axes = 1.1,
col.background = adjustcolor("lavender",
alpha.f = 0.2),
force = 1, segment.size = 3)
BaseMap.Gender <- createFactorMap(X = F4Cmat.Q ,
axis1 = 1, axis2 = 2,
display.points = TRUE,
col.points = col4byG,
pch = 19, cex = 2.5,
title = "Colored according to Gender",
display.labels = TRUE,
col.labels = col4byG,
text.cex = 4, font.face = "bold",
font.family = "sans",
col.axes = "darkorchid",
alpha.axes = 0.2,
width.axes = 1.1,
col.background = adjustcolor("lavender",
alpha.f = 0.2),
force = 1, segment.size = 3)
gendermeans <- getMeans(F4Cmat.Q, bygender)
nationmeans <- getMeans(F4Cmat.Q, bynationality)
gendermeans <- getMeans(F4Cmat.Q, bygender)
nationmeans <- getMeans(F4Cmat.Q, bynationality)
BootCube.N <- PTCA4CATA::Boot4Mean(F4Cmat.Q, design = bynationality,
niter = 100,
suppressProgressBar = TRUE)
dimnames(BootCube.N$BootCube)[[2]] <- paste0('Dimension ',
1: dim(BootCube.N$BootCube)[[2]])
BootCube.G <- PTCA4CATA::Boot4Mean(F4Cmat.Q, design = bygender,
niter = 100,
suppressProgressBar = TRUE)
dimnames(BootCube.G$BootCube)[[2]] <- paste0('Dimension ',
1: dim(BootCube.G$BootCube)[[2]])
n.ellipse <- MakeCIEllipses(BootCube.N$BootCube[,1:2,],
names.of.factors = c("Dimension 1","Dimension 2"),
col = c(col4AM, col4FR))
g.ellipse <- MakeCIEllipses(BootCube.G$BootCube[,1:2,],
names.of.factors = c("Dimension 1","Dimension 2"),
col = c(col4M, col4F))
n.ellipse <- MakeCIEllipses(BootCube.N$BootCube[,1:2,],
names.of.factors = c("Dimension 1","Dimension 2"),
col = c(col4AM, col4FR))
g.ellipse <- MakeCIEllipses(BootCube.G$BootCube[,1:2,],
names.of.factors = c("Dimension 1","Dimension 2"),
col = c(col4M, col4F))
n.symdist.means <- createFactorMap(nationmeans,
axis1 = 1, axis2 = 2,
title = "Colored according to Nationality",
col.points =  c(col4AM, col4FR),
alpha.points = 1, # no transparency
constraints = BaseMap.Nationality$constraints,
display.points = TRUE,
pch = 19, cex = 5,
display.labels = TRUE,
col.labels = c(col4AM, col4FR),
text.cex = 4,font.face = "bold",
font.family = "sans", col.axes = "darkorchid",
alpha.axes = 0.2, width.axes = 1.1,
col.background = adjustcolor("lavender", alpha.f = 0.2),
force = 1, segment.size = 0)
### Excerpts
n.symdist.means <- createFactorMap(nationmeans,
axis1 = 1, axis2 = 2,
title = "Colored according to Nationality",
col.points =  c(col4AM, col4FR),
alpha.points = 1, # no transparency
constraints = BaseMap.Nationality$constraints,
display.points = TRUE,
pch = 19, cex = 5,
display.labels = TRUE,
col.labels = c(col4AM, col4FR),
text.cex = 4,font.face = "bold",
font.family = "sans", col.axes = "darkorchid",
alpha.axes = 0.2, width.axes = 1.1,
col.background = adjustcolor("lavender", alpha.f = 0.2),
force = 1, segment.size = 0)
g.symdist.means <- createFactorMap(gendermeans,
The scree plot for the analysis of the musical quality ratings survey (see \@ref(fig:scree4excerptsq)) shows the high dimensionality of this space, with the first three dimensions extracting a total of `r dim1eigperc`%, `r dim2eigperc`% and `r dim3eigperc`% respectively, totaling only `r sum(dim1eigperc, dim2eigperc, dim3eigperc)`% of the variance. It isn't until we get to the 11th dimension that we see >80% of the variance explained. However, given that the assumption in an analysis like this is that the sample is random, it's important to take these numbers with a grain of salt. Music itself is not random, much less music of the type that was presented in this study; in a single excerpt, repetition is common, and some musical qualities are inextricably linked, for example some stylistic elements with genre. As such, we've opted to focus on the first two dimensions in the analysis below.
axis1 = 1, axis2 = 2,
title = "Colored according to Gender",
g.symdist.means <- createFactorMap(gendermeans,
axis1 = 1, axis2 = 2,
title = "Colored according to Gender",
col.points =  c(col4M, col4F),
alpha.points = 1, # no transparency
constraints = BaseMap.Gender$constraints,
display.points = TRUE,
pch = 19, cex = 5,
display.labels = TRUE,
col.labels = c(col4M, col4F),
text.cex = 4,font.face = "bold",
font.family = "sans", col.axes = "darkorchid",
alpha.axes = 0.2, width.axes = 1.1,
col.background = adjustcolor("lavender", alpha.f = 0.2),
force = 1, segment.size = 0)
a.01.map4part <- BaseMap.Nationality$zeMap_background + labels4RV +
BaseMap.Nationality$zeMap_dots +
n.symdist.means$zeMap_text +
n.symdist.means$zeMap_dots + n.ellipse
a.01.map4part <- BaseMap.Nationality$zeMap_background + labels4RV.Q +
BaseMap.Nationality$zeMap_dots +
n.symdist.means$zeMap_text +
n.symdist.means$zeMap_dots + n.ellipse
a.02.map4part <- BaseMap.Gender$zeMap_background + labels4RV.Q +
BaseMap.Gender$zeMap_dots + g.symdist.means$zeMap_text +
g.symdist.means$zeMap_dots + g.ellipse
grid.arrange(as.grob(a.01.map4part),
as.grob(a.02.map4part), ncol = 2,
top = textGrob("Factor Scores for Expert Ratings",
gp = gpar(fontsize = 18, font = 3)))
a.01.map4part <- BaseMap.Nationality$zeMap_background + labels4RV.Q +
n.symdist.means$zeMap_dots + n.ellipse +
BaseMap.Nationality$zeMap_dots + n.symdist.means$zeMap_text
a.02.map4part <- BaseMap.Gender$zeMap_background + labels4RV.Q +
g.symdist.means$zeMap_dots + g.ellipse +
BaseMap.Gender$zeMap_dots + g.symdist.means$zeMap_text
grid.arrange(as.grob(a.01.map4part),
as.grob(a.02.map4part), ncol = 2,
top = textGrob("Factor Scores for Expert Ratings",
gp = gpar(fontsize = 18, font = 3)))
