library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
library(apaTables)
library(pander)
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = F)
kable(tq)
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T)
kable(tq)
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T)
tq[which(is.na(tq))] <- " "
tq[which(is.na(tq))]
which(is.na(tq))
tq[which(is.na(tq))]
tq[is.na(tq)]
test <- as.data.frame(tq)
which(is.na(test))
test[which(is.na(test))]
str(tq)
test[,which(is.na(test))]
unlist(test[which(is.na(test))])
which(is.na(test))
unlist(test(which(is.na[test])))
unlist(test[which(is.na[test])])
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T, na = " ")
tq
tq %>% is.na(.) %>% which
tq %>% is.na(.) %>% which <- " "
tq %>% is.na(.) %>% which(.) <- " "
navec <- tq %>% is.na %>% which()
tq[navec]
as.vector(tq[navec])
as.vector(tq)[navec]
as.vector(tq)
unlist(tq)
unlist(tq)[navec]
tq <- replace_na(tq, " ")
tq <- replace_na(tq, list(" "))
tq
tq[is.na(tq)]
tq[is.na(tq)] <- " "
tq
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T, na = " ")
tq[is.na(tq)] <- " "
tq_caption <- "Musical Qualities and the provided options"
tq_table <- apa_table(tq,
caption = tq_caption,
landscape = TRUE)
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T, na = " ")
tq[is.na(tq)] <- " "
tq_caption <- "Musical Qualities and the provided options"
tq_table1 <- apa_table(tq[,1:6],
caption = tq_caption,
landscape = TRUE)
tq_table2 <- apa_table(tq[,7:10],
caption = tq_caption,
landscape = TRUE)
tq_table1
tq_table2
my_table <- t(apply(cars, 2, function(x) # Create data
round(c(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x)), 2)
))
apa_table(
cbind(my_table, my_table)
, align = c("l", rep("r", 8))
, caption = "A summary table of the cars dataset."
, note = "This table was created using apa\\_table()"
, added_stub_head = "Variables"
, col_spanners = list(`Cars 1` = c(2, 5), `Cars 2` = c(6, 9))
)
my_table <- t(apply(cars, 2, function(x) # Create data
round(c(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x)), 2)
))
apa_table(
cbind(my_table, my_table)
, align = c("l", rep("r", 8))
, caption = "A summary table of the cars dataset."
, note = "This table was created using apa\\_table()"
, added_stub_head = "Variables"
, col_spanners = list(`Cars 1` = c(2, 5), `Cars 2` = c(6, 9))
)
m <- matrix(1:ncol(tq), 1:nrow(tq))
m
m <- matrix(1:ncol(tq), 5)
m
1:ncol(tq)
m <- matrix(1:ncol(tq), 5)
for (i in 1:ncol(m)) {
cat(kable(tq[, m[, i]], 'latex', booktabs=TRUE), "\\newline")
}
matrix(5)
i = 1
tq[, m[, i]]
i = 2
tq[, m[, i]]
ncol(m)
m <- matrix(1:ncol(tq), 5)
ncol(m)
m
tq[,m[,1]]
tq[,m[,2]]
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T, na = " ")
tq[is.na(tq)] <- " "
tq_caption <- "Musical Qualities and the provided options"
tq[,m[,2]]
round(nrow(tq)/2)
nrow(tq)
round(nrow(tq))
round(nrow(tq)/2)
nrow(tq)/2
ceiling(nrow(tq)/2)
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T, na = " ")
tq[is.na(tq)] <- " "
tq_caption <- "Musical Qualities and the provided options"
tq_table1 <- apa_table(tq[,1:6],
caption = tq_caption,
landscape = TRUE)
tq_table2 <- apa_table(tq[,7:10],
caption = tq_caption,
landscape = TRUE)
m <- matrix(1:ncol(tq), ceiling(nrow(tq)/2))
for (i in 1:ncol(m)) {
cat(kable(tq[, m[, i]], 'latex', booktabs=TRUE), "\\newline")
}
#tq_table1
#tq_table2
kable(tq) %>% kable_styling(latex_options = 'scale_down')
tq_table1 <- apa_table(tq[,1:6],
caption = tq_caption,
landscape = TRUE)
tq_table2 <- apa_table(tq[,7:10],
caption = tq_caption,
landscape = TRUE)
cat(tq_table1, "\\newline", tq_table2)
flextable::autofit(tq)
flextable::autofit(flextable(tq))
flextable::autofit(flextable::flextable(tq))
tq <- read_xlsx("thequalities.xlsx", col_names = T, trim_ws = T, na = " ")
tq[is.na(tq)] <- " "
tq_caption <- "Musical Qualities and the provided options"
tq_table1 <- apa_table(tq,
caption = tq_caption,
landscape = TRUE, placement = 'H')
tq_table2 <- apa_table(tq[,6:10],
caption = tq_caption,
landscape = TRUE, placement = 'H')
#m <- matrix(1:ncol(tq), ceiling(nrow(tq)/2))
#for (i in 1:ncol(m)) {
# cat(kable(tq[, m[, i]], 'latex', booktabs=TRUE), "\\newline")
#}
# kable(tq, 'latex', booktabs = TRUE) %>% kable_styling(latex_options = 'scale_down')
#tq_table1
#tq_table2
flextable::autofit(flextable::flextable(tq))
library(flextable)
flextable::autofit(flextable::flextable(tq) %>% fontsize(., size = 8) %>% font(., fontname = "Computer Modern"))
set_flextable_defaults(font.size = 8)
flextable::autofit(flextable::flextable(tq) %>% font(., fontname = "Computer Modern"))
get_flextable_defaults()
set_flextable_defaults(font.size = 8, font.family = "Computer Modern")
flextable::autofit(flextable::flextable(tq) %>% font(., fontname = "Computer Modern"))
test <- data.table::melt(tq, id.vars = colnames(tq))
test
test <- data.table::melt(tq, variable.names = colnames(tq))
test
test <- data.table::melt(tq)
test
str(tq)
test <- data.table::melt(setDT(tq))
test <- data.table::melt(data.table::setDT(tq))
test
test <- data.table::melt(data.table::setDT(tq), variable.name = colnames(tq))
#set_flextable_defaults(font.size = 8, font.family = "Computer Modern")
#flextable::autofit(flextable::flextable(tq) %>% font(., fontname = "Computer Modern"))
library(pander)
test <- pandoc.table.return(tq, caption = tq_caption, split.tables = panderOptions("table.split.table"))
test
test <- pandoc.table.return(tq, caption = tq_caption, split.tables = 120)
test
pandoc.table.return(tq, caption = tq_caption, split.tables = panderOptions("table.split.table"))
pandoc.table(tq, caption = tq_caption, split.tables = panderOptions("table.split.table"))
pandoc.table(tq, caption = tq_caption, split.tables = 160)
pandoc.table(tq, caption = tq_caption, split.tables = 160, justify = 'l')
pandoc.table(tq, caption = tq_caption, split.tables = 160, justify = c('l','l','l','l','l','l','l','l','l','l'))
pandoc.table(tq, caption = tq_caption, split.tables = 160, justify = c('left','left','left','left','left','left','left','left','left','left'))
install.packages('lscape')
kableExtra::landscape(pandoc.table(tq, caption = tq_caption, split.tables = 160, justify = c('left','left','left','left','left','left','left','left','left','left')))
kableExtra::landscape(pandoc.table(tq, caption = tq_caption, split.tables = 160, justify = c('left','left','left','left','left','left','left','left','left','left')), "latex")
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed)
set.seed(42)
papaja::r_refs("r-references.bib")
library("papaja")
library(ExPosition)
library(InPosition)
library(MExPosition)
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
library(apaTables)
library(pander)
library(flextable)
powerpointFilename <- 'Music-Descriptor-Supp.pptx'
path2pptx    <- './Analysis/'
name4Graphs  <- paste0(path2pptx,powerpointFilename)
title4Graphs <- 'Music Descriptors Supp '
load("catadatamusdim.RData")
musdimdata <- catadata.list$contingency
numberofdims <- catadata.list$numberofdims
thebrick <- catadata.list$thebrick
rows2drop <- c(6,14)
musdimdata.no6 <- musdimdata[-rows2drop,]
thebrick.no6 <- thebrick[-rows2drop,,]
# reorder some of the columns in the french experts dataset,
# taking only the ones we want to analyse for now
fr.ex.data <- catadata.list$french.expert.data[c(1:3,6,7,9:12),c(1,4,5,6,7)]
colnames(fr.ex.data) <- c("age", "gen", "nat", "tr_yrs", "tr_type")
fr.ex.data$gen[which(fr.ex.data$gen == "Homme")] <- "M"
fr.ex.data$gen[which(fr.ex.data$gen == "Femme")] <- "F"
fr.ex.data$nat <- "FR"
fr.ex.data$tr_type[which(fr.ex.data$tr_type == "Instrumentale")] <- "Inst"
fr.ex.data$tr_type[which(fr.ex.data$tr_type == "Vocale")] <- "Voc"
am.ex.data <- catadata.list$expert.data[,c(1:3,6,7)]
colnames(am.ex.data) <- colnames(fr.ex.data)
am.ex.data$nat <- "AM"
am.ex.data$gen[which(am.ex.data$gen == "Male")] <- "M"
am.ex.data$gen[which(am.ex.data$gen == "Female")] <- "F"
am.ex.data$tr_type[which(am.ex.data$tr_type == "Instrumental")] <- "Inst"
am.ex.data$tr_type[which(am.ex.data$tr_type == "Vocal")] <- "Voc"
# Bind it all together
ex.data <- rbind(am.ex.data, fr.ex.data)
bygender <- as.factor(ex.data$gen)
bynationality <- as.factor(ex.data$nat)
dimcares.inf <- epCA.inference.battery(musdimdata.no6,
masses= NULL, weights= NULL,
hellinger = FALSE, symmetric = TRUE,
graphs =FALSE, test.iters = 1000)
# Factor Scores
FIsym  <- dimcares.inf$Fixed.Data$ExPosition.Data$fi
FJs    <- dimcares.inf$Fixed.Data$ExPosition.Data$fj
CA.Q.Eigs <- dimcares.inf$Fixed.Data$ExPosition.Data$eigs
CA.Q.pEig <- dimcares.inf$Inference.Data$components$eigs.perm
# Participant colors:
col4M <- wes_palettes$Rushmore1[3]
col4F <- wes_palettes$Rushmore1[5]
col4FR <- wes_palettes$Darjeeling1[1]
col4AM <- wes_palettes$Darjeeling2[2]
#
col4byG <- as.character(bygender)
col4byG[col4byG == "F"] <- col4F
col4byG[col4byG == "M"] <- col4M
col4byN <- as.character(bynationality)
col4byN[col4byN == "FR"] <- col4FR
col4byN[col4byN == "AM"] <- col4AM
# To account for the fact that we removed some rows above:
numberofdims[c(1,7,8,9,10)] <- c(8,7,3,4,6)
numberofdims <- numberofdims[-11]
col4cols <- wes_palette("FantasticFox1",
length(numberofdims), type = "continuous")
col4cols <- rep(col4cols, numberofdims)
bootCA <- Boot4PTCA(ZeDataCube = thebrick.no6,
fi = FIsym,
fj = FJs,
eigs = CA.Q.Eigs,
nf2keep = 3,
nBootIter = 500)
# Compute Bootstrapped ratios
bootRatios.I <- PTCA4CATA::boot.ratio.test(bootCA$RowsBoot,
critical.value = 2)
bootRatios.J <- PTCA4CATA::boot.ratio.test(bootCA$ColumnsBoot,
critical.value = 2)
# Probabilities
probBR.I  <- bootRatios.I$prob.boot.ratios
probBR.J  <- bootRatios.J$prob.boot.ratios
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$fi) <- paste("Dim. ", c(1:27))
fi.caption.q1 <- "Row Factor Scores, Musical Qualities Survey, Dimensions 1:14"
fitable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fi[,1:14],
caption = fi.caption.q1,
landscape = TRUE, font_size = "scriptsize")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$fi, file = "CSVS/Qualities_FI.csv")
#fitable.q1
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$fi) <- paste("Dim. ", c(1:27))
fi.caption.q1 <- "Row Factor Scores, Musical Qualities Survey, Dimensions 1:14"
fitable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fi[,1:14],
caption = fi.caption.q1,
landscape = TRUE, font_size = "scriptsize")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$fi, file = "CSVS/Qualities_FI.csv")
#fitable.q1
fi.caption.q2 <- "Row Factor Scores, Musical Qualities Survey, Dimensions 15 - 27"
fitable.q2 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fi[,15:27],
caption = fi.caption.q2,
landscape = TRUE, font_size = "scriptsize")
#fitable.q2
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$fj) <- paste("Dim. ", c(1:27))
fj.caption.q1 <- "Column Factor Scores, Musical Qualities Survey, Dimensions 1 - 14"
fjtable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fj[,1:14],
caption = fj.caption.q1,
landscape = TRUE, font_size = "tiny")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$fj, file = "CSVS/Qualities_FJ.csv")
#fjtable.q1
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$ci) <- paste("Dim. ", c(1:27))
ci.caption.q1 <- "Unsigned Row Contributions, Musical Qualities Survey, Dimensions 1 - 14"
citable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$ci[,1:14],
caption = ci.caption.q1,
landscape = TRUE, font_size = "scriptsize")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$ci, file = "CSVS/Qualities_CI.csv")
#citable.q1
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$cj) <- paste("Dim. ", c(1:27))
cj.caption.q1 <- "Unsigned Column Contributions, Musical Qualities Survey, Dimensions 1 - 14"
cjtable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$cj[,1:14],
caption = cj.caption.q1,
landscape = TRUE, font_size = "tiny")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$cj, file = "CSVS/Qualities_CJ.csv")
#cjtable.q1
bri.t.q <- bootRatios.I$boot.ratios
bri.t.q[is.nan(bri.t.q)] <- 0
bri.t.qsig <- bootRatios.I$prob.boot.ratios.corr
bri.t.qsig[is.nan(bri.t.qsig)] <- 1
bootswstars.QI <- matrix(paste(as.matrix(round(bri.t.q, 2)), as.matrix(add.significance.stars(bri.t.qsig))),
nrow = 3, ncol = 28)
colnames(bootswstars.QI) <- rownames(dimcares.inf$Fixed.Data$ExPosition.Data$fi)
rownames(bootswstars.QI) <- paste("Dim. ", c(1:3))
boots.caption.qi <- "Bootstrapped Row Factor Score Ratios for Dimensions 1 - 3"
boots.note.qi <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"
bootstable.qi <- apa_table(t(bootswstars.QI), caption = boots.caption.qi, note = boots.note.qi,
landscape = F)
write.csv(bootswstars.QI, file = "CSVS/Qualities_BootI.csv")
#bootstable.qi
brj.t.q <- bootRatios.J$boot.ratios
brj.t.q[is.nan(brj.t.q)] <- 0
brj.t.qsig <- bootRatios.J$prob.boot.ratios.corr
brj.t.qsig[is.nan(brj.t.qsig)] <- 1
bootswstars.QJ <- matrix(paste(as.matrix(round(brj.t.q, 2)), as.matrix(add.significance.stars(brj.t.qsig))),
nrow = 3, ncol = 60)
colnames(bootswstars.QJ) <- rownames(dimcares.inf$Fixed.Data$ExPosition.Data$fj)
rownames(bootswstars.QJ) <- paste("Dim. ", c(1:3))
boots.caption.qj <- "Bootstrapped Column Factor Score Ratios for Dimensions 1 - 3"
boots.note.qj <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"
bootstable.qj <- apa_table(t(bootswstars.QJ), caption = boots.caption.qj, note = boots.note.qj,
landscape = F, font_size = "footnotesize")
write.csv(bootswstars.QJ, file = "CSVS/Qualities_BootJ.csv")
#bootstable.qj
load("adj.catadata.list.RData")
load("excerptsdesign.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")
adj.contingency <- adj.catadata.list$adjcontingency
adjsym.cares <- epCA(adj.contingency,
symmetric = TRUE)
adjrenorm <- CARenormalization(adjsym.cares$ExPosition.Data$fi,
delta = adjsym.cares$ExPosition.Data$pdq$Dv,
singularValues = T,
masses = adjsym.cares$ExPosition.Data$M
)
FIsym.adj <- adjsym.cares$ExPosition.Data$fi
FIasym.adj <- adjrenorm$G_A
FJs.adj <- adjsym.cares$ExPosition.Data$fj
CAEigs.adj <- adjsym.cares$ExPosition.Data$eigs
# Bootstrapping
bootCA.adj <- Boot4PTCA(ZeDataCube = adjbrick,
fi = FIsym.adj,
fj = FJs.adj,
eigs = CAEigs.adj,
nf2keep = 3,
nBootIter = 500)
adjbrick <- adj.catadata.list$adjbrick
# Bootstrapping
bootCA.adj <- Boot4PTCA(ZeDataCube = adjbrick,
fi = FIsym.adj,
fj = FJs.adj,
eigs = CAEigs.adj,
nf2keep = 3,
nBootIter = 500)
# Compute Bootstrapped ratios
bootRatadj.I <- PTCA4CATA::boot.ratio.test(bootCA.adj$RowsBoot,
critical.value = 2)
bootRatadj.J <- PTCA4CATA::boot.ratio.test(bootCA.adj$ColumnsBoot,
critical.value = 2)
# Probabilities
probBRadj.I  <- bootRatadj.I$prob.boot.ratios
probBRadj.J  <- bootRatadj.J$prob.boot.ratios
# Permutation tests
adjca.inf <- perm4PTCA(aCube = adjbrick,
nIter = 1000,
permType = 'byRows' ,
Malinvaud = TRUE)
Ind.Permu.adj    <- adjca.inf$permInertia
InertiaFixed.adj <- adjca.inf$fixedInertia
prob.cpt.lst.adj <- adjca.inf$MalinvaudQ['p-perm',]
# Get the p values for the components
prob.cpt.adj <- (unlist(prob.cpt.lst.adj[2:length(prob.cpt.lst.adj)]))
prob.cpt.adj[is.na(prob.cpt.adj)] <- 1
colnames(FIsym.adj) <- paste("Dim. ", c(1:29))
fi.caption.a1 <- "Row Factor Scores, Adjectives Survey, Dimensions 1 - 15"
fitable.a1 <- apa_table(FIsym.adj[,1:15],
caption = fi.caption.a1,
landscape = TRUE, font_size = "footnotesize")
write.csv(FIsym.adj, file = "CSVS/Adjectives_FI.csv")
#fitable.a1
fi.caption.a2 <- "Row Factor Scores, Adjectives Survey, Dimensions 16 - 29"
fitable.a2 <- apa_table(FIsym.adj[,16:29],
caption = fi.caption.a2,
landscape = TRUE, font_size = "footnotesize")
#fitable.a2
colnames(FJs.adj) <- paste("Dim. ", c(1:29))
fj.caption.a1 <- "Column Factor Scores, Adjectives Survey, Dimensions 1 - 15"
fjtable.a1 <- apa_table(FJs.adj[,1:15],
caption = fj.caption.a1,
landscape = TRUE, font_size = "footnotesize")
write.csv(FJs.adj, file = "CSVS/Adjectives_FJ.csv")
#fjtable.a1
a.cis <- adjsym.cares$ExPosition.Data$ci
colnames(a.cis) <- paste("Dim. ", c(1:29))
ci.caption.a1 <- "Unsigned Row Contributions, Adjectives Survey, Dimensions 1 - 15"
citable.a1 <- apa_table(a.cis[,1:15],
caption = ci.caption.a1,
landscape = TRUE, font_size = "footnotesize")
write.csv(a.cis, file = "CSVS/Adjectives_CI.csv")
#citable.a1
a.cjs <- adjsym.cares$ExPosition.Data$cj
colnames(a.cjs) <- paste("Dim. ", c(1:29))
cj.caption.a1 <- "Unsigned Column Contributions, Adjectives Survey, Dimensions 1 - 15"
cjtable.a1 <- apa_table(a.cjs[,1:15],
caption = cj.caption.a1,
landscape = TRUE, font_size = "footnotesize")
write.csv(a.cjs, file = "CSVS/Adjectives_CJ.csv")
#cjtable.a1
bri.t.a <- bootRatadj.I$boot.ratios
bri.t.a[is.nan(bri.t.a)] <- 0
bri.t.asig <- bootRatadj.I$prob.boot.ratios.corr
bri.t.asig[is.nan(bri.t.asig)] <- 1
bootswstars.aI <- matrix(paste(as.matrix(round(bri.t.a, 2)), as.matrix(add.significance.stars(bri.t.asig))),
nrow = 3, ncol = 30)
colnames(bootswstars.aI) <- rownames(adjsym.cares$ExPosition.Data$fi)
rownames(bootswstars.aI) <- paste("Dim. ", c(1:3))
boots.caption.ai <- "Bootstrapped Row Factor Score Ratios for Dimensions 1 - 3"
boots.note.ai <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"
bootstable.ai <- apa_table(t(bootswstars.aI), caption = boots.caption.ai, note = boots.note.ai,
landscape = F)
write.csv(bootswstars.aI, file = "CSVS/Adjectives_BootI.csv")
#bootstable.ai
brj.t.a <- bootRatadj.J$boot.ratios
brj.t.a[is.nan(brj.t.a)] <- 0
brj.t.asig <- bootRatadj.J$prob.boot.ratios.corr
brj.t.asig[is.nan(brj.t.asig)] <- 1
bootswstars.aJ <- matrix(paste(as.matrix(round(brj.t.a, 2)), as.matrix(add.significance.stars(brj.t.asig))),
nrow = 3, ncol = 33)
colnames(bootswstars.aJ) <- rownames(adjsym.cares$ExPosition.Data$fj)
rownames(bootswstars.aJ) <- paste("Dim. ", c(1:3))
boots.caption.aj <- "Bootstrapped Column Factor Score Ratios for Dimensions 1 - 3"
boots.note.aj <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"
bootstable.aj <- apa_table(t(bootswstars.aJ), caption = boots.caption.aj, note = boots.note.aj,
landscape = F)
write.csv(bootswstars.aJ, file = "CSVS/Adjectives_BootJ.csv")
#bootstable.aj
tr <- read_xlsx("translations.xlsx")
tr
tr <- read_xlsx("translations.xlsx")
apa_table(tr, caption = "CATA Adjectives")
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed)
set.seed(42)
papaja::r_refs("r-references.bib")
load("adj.catadata.list.RData")
load("excerptsdesign.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")
library("papaja")
library(ExPosition)
library(InPosition)
library(MExPosition)
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
library(apaTables)
library(pander)
library(flextable)
tr <- read_xlsx("translations.xlsx")
apa_table(tr, caption = "CATA Adjectives", placement = 'h')
