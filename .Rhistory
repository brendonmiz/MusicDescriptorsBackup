mat6 <- as.matrix(catadata.list$contingency[c(6,14),])
colnames(mat6) <- colnames(catadata.list$contingency)
#test <- epCA(musdimdata.no6,
#                  masses= NULL, weights= NULL,
#                 hellinger = FALSE, symmetric = TRUE,
#                 graphs =FALSE)
proj6 <- supplementaryRows(mat6, dimcares.inf$Fixed.Data)
rownames(proj6$fii) <- c("6","14")
scoresw6 <- rbind(FIsym, proj6$fii)
cols4proj <- c(col4exgrp, gplots::col2hex(c("blueviolet", "blueviolet")))
desc_groups <- excerptsdesign$ex.design$col4exgrp
dgf <- excerptsdesign$ex.design$thedesign
desc_groups[dgf == "ex.group1"] <- "Group 1"
desc_groups[dgf == "ex.group2"] <- "Group 2"
desc_groups[dgf == "ex.group3"] <- "Group 3"
desc_groups[dgf == "ex.group4"] <- "Group 4"
desc_groups <- c(desc_groups, "Projected", "Projected")
desc_groups <- as.factor(desc_groups)
#ti.qs.12 <- MakeToleranceIntervals(scoresw6, design = desc_groups, col = unique(cols4proj))
#+ ti.qs.12
exmap.sym.12 <- createFactorMapIJ(scoresw6,
sig.FJs,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols4proj,
col.labels.i = cols4proj,
col.points.j = col4sigcolsonly,
col.labels.j = col4sigcolsonly,
text.cex.i = 4, text.cex.j = 4,
cex.i = 4, cex.j = 4,
font.face.j = "italic",
alpha.labels.i = 1, alpha.labels.j = 1
)
vc.labels.12 <- createxyLabels(resCA = dimcares.inf$Fixed.Data, x_axis = axisone, y_axis = axistwo)
mus.012.i <- exmap.sym.12$baseMap +
exmap.sym.12$I_points +
exmap.sym.12$I_labels +
vc.labels.12 + ggtitle('Excerpts') +
theme(plot.title = element_text(size = 18, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
mus.012.j <- exmap.sym.12$baseMap +
exmap.sym.12$J_points +
exmap.sym.12$J_labels +
vc.labels.12 + ggtitle('Musical Qualities') +
theme(plot.title = element_text(size = 18, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
print(mus.012.i)
#print(mus.012.j)
#mus.012.023 <- recordPlot()
load("excerptsdesign.RData")
col4exgrp <- excerptsdesign$ex.design$col4exgrp
ex.cols <- excerptsdesign$ex.design$ex.cols
names(col4exgrp) <- rownames(musdimdata.no6)
axisone = 5
axistwo = 4
rownames(FIsym)<- c(1:5,7:13,15:30)
unsignedCJ <- dimcares.inf$Fixed.Data$ExPosition.Data$cj[,1:2]
signedCJ <- dimcares.inf$Fixed.Data$ExPosition.Data$cj * sign(FJs)
sig.colsonly <-  rownames(FJs)[(unsignedCJ[,1] > (1/nrow(FJs))) |
(unsignedCJ[,2] > (1/nrow(FJs))) ]
sig.FJs <- FJs[sig.colsonly,1:4]
col4sigcolsonly <- col4cols[(unsignedCJ[,1] > (1/nrow(FJs))) |
(unsignedCJ[,2] > (1/nrow(FJs))) ]
mat6 <- as.matrix(catadata.list$contingency[c(6,14),])
colnames(mat6) <- colnames(catadata.list$contingency)
#test <- epCA(musdimdata.no6,
#                  masses= NULL, weights= NULL,
#                 hellinger = FALSE, symmetric = TRUE,
#                 graphs =FALSE)
proj6 <- supplementaryRows(mat6, dimcares.inf$Fixed.Data)
rownames(proj6$fii) <- c("6","14")
scoresw6 <- rbind(FIsym, proj6$fii)
cols4proj <- c(col4exgrp, gplots::col2hex(c("blueviolet", "blueviolet")))
desc_groups <- excerptsdesign$ex.design$col4exgrp
dgf <- excerptsdesign$ex.design$thedesign
desc_groups[dgf == "ex.group1"] <- "Group 1"
desc_groups[dgf == "ex.group2"] <- "Group 2"
desc_groups[dgf == "ex.group3"] <- "Group 3"
desc_groups[dgf == "ex.group4"] <- "Group 4"
desc_groups <- c(desc_groups, "Projected", "Projected")
desc_groups <- as.factor(desc_groups)
#ti.qs.12 <- MakeToleranceIntervals(scoresw6, design = desc_groups, col = unique(cols4proj))
#+ ti.qs.12
exmap.sym.12 <- createFactorMapIJ(scoresw6,
sig.FJs,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols4proj,
col.labels.i = cols4proj,
col.points.j = col4sigcolsonly,
col.labels.j = col4sigcolsonly,
text.cex.i = 4, text.cex.j = 4,
cex.i = 4, cex.j = 4,
font.face.j = "italic",
alpha.labels.i = 1, alpha.labels.j = 1
)
load("excerptsdesign.RData")
col4exgrp <- excerptsdesign$ex.design$col4exgrp
ex.cols <- excerptsdesign$ex.design$ex.cols
names(col4exgrp) <- rownames(musdimdata.no6)
axisone = 5
axistwo = 4
rownames(FIsym)<- c(1:5,7:13,15:30)
unsignedCJ <- dimcares.inf$Fixed.Data$ExPosition.Data$cj[,1:2]
signedCJ <- dimcares.inf$Fixed.Data$ExPosition.Data$cj * sign(FJs)
sig.colsonly <-  rownames(FJs)[(unsignedCJ[,1] > (1/nrow(FJs))) |
(unsignedCJ[,2] > (1/nrow(FJs))) ]
sig.FJs <- FJs[sig.colsonly,1:5]
col4sigcolsonly <- col4cols[(unsignedCJ[,1] > (1/nrow(FJs))) |
(unsignedCJ[,2] > (1/nrow(FJs))) ]
mat6 <- as.matrix(catadata.list$contingency[c(6,14),])
colnames(mat6) <- colnames(catadata.list$contingency)
#test <- epCA(musdimdata.no6,
#                  masses= NULL, weights= NULL,
#                 hellinger = FALSE, symmetric = TRUE,
#                 graphs =FALSE)
proj6 <- supplementaryRows(mat6, dimcares.inf$Fixed.Data)
rownames(proj6$fii) <- c("6","14")
scoresw6 <- rbind(FIsym, proj6$fii)
cols4proj <- c(col4exgrp, gplots::col2hex(c("blueviolet", "blueviolet")))
desc_groups <- excerptsdesign$ex.design$col4exgrp
dgf <- excerptsdesign$ex.design$thedesign
desc_groups[dgf == "ex.group1"] <- "Group 1"
desc_groups[dgf == "ex.group2"] <- "Group 2"
desc_groups[dgf == "ex.group3"] <- "Group 3"
desc_groups[dgf == "ex.group4"] <- "Group 4"
desc_groups <- c(desc_groups, "Projected", "Projected")
desc_groups <- as.factor(desc_groups)
#ti.qs.12 <- MakeToleranceIntervals(scoresw6, design = desc_groups, col = unique(cols4proj))
#+ ti.qs.12
exmap.sym.12 <- createFactorMapIJ(scoresw6,
sig.FJs,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols4proj,
col.labels.i = cols4proj,
col.points.j = col4sigcolsonly,
col.labels.j = col4sigcolsonly,
text.cex.i = 4, text.cex.j = 4,
cex.i = 4, cex.j = 4,
font.face.j = "italic",
alpha.labels.i = 1, alpha.labels.j = 1
)
vc.labels.12 <- createxyLabels(resCA = dimcares.inf$Fixed.Data, x_axis = axisone, y_axis = axistwo)
mus.012.i <- exmap.sym.12$baseMap +
exmap.sym.12$I_points +
exmap.sym.12$I_labels +
vc.labels.12 + ggtitle('Excerpts') +
theme(plot.title = element_text(size = 18, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
mus.012.j <- exmap.sym.12$baseMap +
exmap.sym.12$J_points +
exmap.sym.12$J_labels +
vc.labels.12 + ggtitle('Musical Qualities') +
theme(plot.title = element_text(size = 18, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
print(mus.012.i)
#print(mus.012.j)
#mus.012.023 <- recordPlot()
rm(list = ls())
gc()
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed)
set.seed(42)
papaja::r_refs("r-references.bib")
rm(list = ls())
load("adj.catadata.list.RData")
load("excerptsdesign.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")
partcols <- adj.catadata.list$partcols
adjbrick <- adj.catadata.list$adjbrick
adj.contingency <- adj.catadata.list$adjcontingency
adjcols <- adj.catadata.list$adjcols
listofwords <- adj.catadata.list$listofwords
nat.factor <- partcols$nationality
col4nat <- nat.factor
nat.factor <- as.factor(nat.factor)
#cols$n.oc[nat.factor == "AM"] <- "#FF0000"
#cols$n.oc[nat.factor == "FR"] <- "#046C9A"
#cols$n.gc[1] <- "#FF0000"
#cols$n.gc[2] <- "#046C9A"
adjsym.cares <- epCA.inference.battery(adj.contingency,
symmetric = TRUE)
library("papaja")
suppressMessages(library(ExPosition))
suppressMessages(library(InPosition))
suppressMessages(library(MExPosition))
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
#library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
adjsym.cares <- epCA.inference.battery(adj.contingency,
symmetric = TRUE)
adjrenorm <- CARenormalization(adjsym.cares$Fixed.Data$ExPosition.Data$fi,
delta = adjsym.cares$Fixed.Data$ExPosition.Data$pdq$Dv,
singularValues = T,
masses = adjsym.cares$Fixed.Data$ExPosition.Data$M
)
FIsym.adj <- adjsym.cares$Fixed.Data$ExPosition.Data$fi
FIasym.adj <- adjrenorm$G_A
FJs.adj <- adjsym.cares$Fixed.Data$ExPosition.Data$fj
CAEigs.adj <- adjsym.cares$Fixed.Data$ExPosition.Data$eigs
# Bootstrapping
bootCA.adj <- Boot4PTCA(ZeDataCube = adjbrick,
fi = FIsym.adj,
fj = FJs.adj,
eigs = CAEigs.adj,
nf2keep = 3,
nBootIter = 1000)
# Compute Bootstrapped ratios
bootRatadj.I <- PTCA4CATA::boot.ratio.test(bootCA.adj$RowsBoot,
critical.value = 2)
bootRatadj.J <- PTCA4CATA::boot.ratio.test(bootCA.adj$ColumnsBoot,
critical.value = 2)
# Probabilities
probBRadj.I  <- bootRatadj.I$prob.boot.ratios
probBRadj.J  <- bootRatadj.J$prob.boot.ratios
# Permutation tests
#adjca.inf <- perm4PTCA(aCube = adjbrick,
#                       nIter = 1000,
#                       permType = 'byRows' ,
#                       Malinvaud = TRUE)
#Ind.Permu.adj    <- adjca.inf$permInertia
#InertiaFixed.adj <- adjca.inf$fixedInertia
#prob.cpt.lst.adj <- adjca.inf$MalinvaudQ['p-perm',]
# Get the p values for the components
#prob.cpt.adj <- (unlist(prob.cpt.lst.adj[2:length(prob.cpt.lst.adj)]))
#prob.cpt.adj[is.na(prob.cpt.adj)] <- 1
Cmat.adj <- createSymDist4PTCA(adjbrick)$CrossProduct
eigenCmat.adj <- eigen(Cmat.adj, symmetric = TRUE)
eig4Cmat.adj <-  eigenCmat.adj$values
tau4Cmat.adj <- round( (100*eig4Cmat.adj) / sum(eig4Cmat.adj))
nk       <- 100
F4Cmat.adj   <- eigenCmat.adj$vectors[,1:nk] %*% diag(eig4Cmat.adj[1:nk]^(1/2))
rownames(F4Cmat.adj) <- rownames(Cmat.adj)
F4dist <- F4Cmat.adj
rownames(F4dist) <- partcols$nationality
cmat.D <- dist(F4dist)
fit.p <- hclust(cmat.D, method = "ward.D2")
ngroups <- 2
col4extree <- cols$n.gc
part.groups <- cutree(fit.p, k= ngroups)
col4partxhca <- recode(part.groups,
"1" = col4extree[2],
"2" = col4extree[1]
)
mus.tree4parts <- factoextra::fviz_dend(fit.p,  k = 2,
#                        k_colors = unique(col4extree.w6),
#                        label_cols = col4extree.w6,
cex = .75, xlab = 'Participants',
main = ' ',
rect = TRUE, rect_fill = TRUE)  + theme(plot.title = element_text(size = 14, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
#print(mus.tree4parts)
labelscolor <- cbind(fit.p$labels, part.groups) %>% as.data.frame()
labcolgroup <- labelscolor %>% group_by(V1, part.groups) %>% summarise(number = n() )
#labcolgroup
posthocperc <- c(101/112, 81/166, 11/112, 85/166)
ScreeInf <- PlotScree(ev = eig4Cmat.adj,
max.ev = NULL, alpha = 0.05,
col.ns = "#006D2C", col.sig = "#54278F", title = " ",
#title = "Participants Distance Analysis, Adjectives Survey: \nExplained Variance per Dimension",
plotKaiser = T)
a000.adj.screeRV <-  recordPlot()
adj.tau <- adjsym.cares$Fixed.Data$ExPosition.Data$t
adj.scree <- PlotScree(adjsym.cares$Fixed.Data$ExPosition.Data$eigs,
p.ev = adjsym.cares$Inference.Data$components$p.vals,
plotKaiser = T, color4Kaiser = "red", title = " ")
mus.00.scree <- recordPlot()
Shortnames4Participants <-  dimnames(adjbrick[[3]])
F4Plot <- F4Cmat.adj
rownames(F4Plot) <- Shortnames4Participants
# Make labels
labels4RV <- createxyLabels.gen(1,2,lambda = eig4Cmat.adj, tau = tau4Cmat.adj)
#Here we calculate the means for the factor groupings, and then bootstrap them:
n.adjmeans <- getMeans(F4Plot, nat.factor)
BootCadj.N <- PTCA4CATA::Boot4Mean(F4Cmat.adj, design = nat.factor,
niter = 1000,
suppressProgressBar = TRUE)
dimnames(BootCadj.N$BootCube)[[2]] <- paste0('Dimension ',
1:dim(BootCadj.N$BootCube)[[2]])
# Create ellipses for the map
n.elliadj <- MakeCIEllipses(BootCadj.N$BootCube[,1:2,], p.level = .99,
names.of.factors = c("Dimension 1", "Dimension 2"),
col = cols$n.gc)
#Base map
BaseMap.Participants <- createFactorMap(X = F4Plot ,
axis1 = 1, axis2 = 2,
display.points = TRUE,
col.points = cols$n.oc,
pch = 19, cex = 2.5,
display.labels = TRUE,
col.labels = cols$n.oc,
text.cex = 4, font.face = "bold",
font.family = "sans",
col.axes = "darkorchid",
alpha.points = .25,
alpha.axes = 0.2,
width.axes = 1.1,
col.background = adjustcolor("lavender",
alpha.f = 0.2),
force = 1, segment.size = 3)
#Nationality map
title4RV <- "RV Analysis of Participants \nIncluding Group Means and Confidence Intervals"
n.rv.means <- createFactorMap(n.adjmeans,
axis1 = 1, axis2 = 2,
constraints = BaseMap.Participants$constraints,
col.points =  cols$n.gc,
alpha.points = 1, # no transparency
alpha.labels = 1,
display.points = TRUE,
pch = 17, cex = 5,
display.labels = TRUE,
#                              title = title4RV,
col.labels = cols$n.gc,
text.cex = 6,font.face = "bold",
font.family = "sans", col.axes = "darkorchid",
alpha.axes = 0.2, width.axes = 1.1,
col.background = adjustcolor("lavender", alpha.f = 0.2),
force = 1, segment.size = 0)
a.03adj.map4part <- BaseMap.Participants$zeMap_background +
n.rv.means$zeMap_text + n.rv.means$zeMap_dots +
BaseMap.Participants$zeMap_dots + n.elliadj + labels4RV + ggtitle(" ") +
theme(plot.title = element_text(size = 13, family = "serif"),
axis.title = element_text(size = 13, face = "italic", family = "serif"))
print(a.03adj.map4part)
A.dim14test <- F4Cmat.adj[,1]
A.dim24test <- F4Cmat.adj[,2]
ttdat <- cbind(F4Cmat.adj[,1:2], as.factor(partcols$nationality)) %>% as.data.frame
colnames(ttdat) <- c("dim1", "dim2", "Nationality")
atest1 <- aov(A.dim14test ~ nat.factor) %>% apa_print
atest1.Tuk <- aov(A.dim14test ~ nat.factor) %>% TukeyHSD()
atest1t <- t.test(x = ttdat$dim1[ttdat$Nationality==1],
y = ttdat$dim1[ttdat$Nationality==2]) %>% apa_print
t.summary <- ttdat %>% group_by(Nationality) %>% summarise(m.d1 = mean(dim1), s.d1 = sd(dim1),
m.d2 = mean(dim2), s.d2 = sd(dim2))
atest2 <- aov(A.dim24test ~ nat.factor) %>% apa_print
atest2t <- ttdat %>% rstatix::t_test(dim2 ~ Nationality) %>% rstatix::add_significance()
t.summary
atest1t <- t.test(x = ttdat$dim1[ttdat$Nationality==1],
y = ttdat$dim1[ttdat$Nationality==2]) %>% apa_print
atest1t
dim(ttdat)
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed, dev = c("pdf", "png"))
set.seed(42)
papaja::r_refs("r-references.bib")
library("papaja")
library(ExPosition)
library(InPosition)
library(MExPosition)
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
library(apaTables)
library(pander)
library(flextable)
load("adj.catadata.list.RData")
load("excerptsdesign.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")
adj.contingency <- adj.catadata.list$adjcontingency
adjsym.cares <- epCA(adj.contingency,
symmetric = TRUE)
adjrenorm <- CARenormalization(adjsym.cares$ExPosition.Data$fi,
delta = adjsym.cares$ExPosition.Data$pdq$Dv,
singularValues = T,
masses = adjsym.cares$ExPosition.Data$M
)
FIsym.adj <- adjsym.cares$ExPosition.Data$fi
FIasym.adj <- adjrenorm$G_A
FJs.adj <- adjsym.cares$ExPosition.Data$fj
CAEigs.adj <- adjsym.cares$ExPosition.Data$eigs
adj.partdata <- adj.catadata.list$partcols
adj.partdata$age <- gsub(" ans", "", adj.partdata$age)
adj.partdata$gender <- gsub("Aucun ou prefere ne pas repondre", "Aucun/Sexe Neutre", adj.partdata$gender)
adj.partdata$gender <- gsub("Sexe neutre", "Aucun/Sexe Neutre", adj.partdata$gender)
adj.partdata$gender <- gsub("Non-binary", "Non-Binary/other", adj.partdata$gender)
adj.partdata$gender <- gsub("Not listed or prefer not to answer", "Non-Binary/other", adj.partdata$gender)
adj.partdata$age <- gsub("17", "18", adj.partdata$age)
adj.partdata$age <- gsub("16", "18", adj.partdata$age)
adj.partdata$age[adj.partdata$age == 0] <- round(mean(as.numeric(adj.partdata$age), na.rm = TRUE))
ap.summary <- adj.partdata %>% group_by(nationality, gender) %>%
summarise(count = n(),
m.age = mean(as.numeric(age)), sd.age = sd(age),
min.age = min(as.numeric(age)), max.age = max(as.numeric(age)),
m.train = mean(as.numeric(tr_yrs)), sd.train = sd(tr_yrs),
)
ap.summary
F4dist <- F4Cmat.adj
adj.catadata.list
Cmat.adj <- createSymDist4PTCA(adjbrick)$CrossProduct
adjbrick <- adj.catadata.list$adjbrick
Cmat.adj <- createSymDist4PTCA(adjbrick)$CrossProduct
eigenCmat.adj <- eigen(Cmat.adj, symmetric = TRUE)
eig4Cmat.adj <-  eigenCmat.adj$values
tau4Cmat.adj <- round( (100*eig4Cmat.adj) / sum(eig4Cmat.adj))
nk       <- 100
F4Cmat.adj   <- eigenCmat.adj$vectors[,1:nk] %*% diag(eig4Cmat.adj[1:nk]^(1/2))
rownames(F4Cmat.adj) <- rownames(Cmat.adj)
F4dist <- F4Cmat.adj
rownames(F4dist) <- partcols$nationality
partcols <- adj.catadata.list$partcols
rownames(F4dist) <- partcols$nationality
cmat.D <- dist(F4dist)
fit.p <- hclust(cmat.D, method = "ward.D2")
ngroups <- 2
col4extree <- cols$n.gc
part.groups <- cutree(fit.p, k= ngroups)
col4partxhca <- recode(part.groups,
"1" = col4extree[2],
"2" = col4extree[1]
)
mus.tree4parts <- factoextra::fviz_dend(fit.p,  k = 2,
#                        k_colors = unique(col4extree.w6),
#                        label_cols = col4extree.w6,
cex = .75, xlab = 'Excerpts',
main = ' ',
rect = TRUE, rect_fill = TRUE)  + theme(plot.title = element_text(size = 14, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
labelscolor <- cbind(fit.p$labels, part.groups) %>% as.data.frame()
labcolgroup <- labelscolor %>% group_by(V1, part.groups) %>% summarise(number = n() )
#labcolgroup
posthocperc <- c(101/112, 81/166, 11/112, 85/166)
Shortnames4Participants <-  dimnames(adjbrick[[3]])
F4Plot <- F4Cmat.adj
rownames(F4Plot) <- Shortnames4Participants
# Make labels
labels4RV <- createxyLabels.gen(1,2,lambda = eig4Cmat.adj, tau = tau4Cmat.adj)
#Here we calculate the means for the factor groupings, and then bootstrap them:
n.adjmeansp <- getMeans(F4Plot, part.groups)
BootCadj.Np <- PTCA4CATA::Boot4Mean(F4Cmat.adj, design = part.groups,
niter = 1000,
suppressProgressBar = TRUE)
dimnames(BootCadj.Np$BootCube)[[2]] <- paste0('Dimension ',
1:dim(BootCadj.Np$BootCube)[[2]])
# Create ellipses for the map
n.elliadjp <- MakeCIEllipses(BootCadj.Np$BootCube[,1:2,],
names.of.factors = c("Dimension 1", "Dimension 2"),
col = unique(col4partxhca))
n.toladjp <- MakeToleranceIntervals(F4Plot[,1:2], design = partcols$nationality, p.level = .95,
names.of.factors = c("Dimension 1", "Dimension 2"),
col = unique(col4partxhca)[2:1],
alpha.ellipse = .1, alpha.line = .3)
#Base map
BaseMap.Participantsp <- createFactorMap(X = F4Plot ,
axis1 = 1, axis2 = 2,
display.points = TRUE,
col.points = col4partxhca,
pch = 19, cex = 2.5,
display.labels = TRUE,
col.labels = col4partxhca,
text.cex = 4, font.face = "bold",
font.family = "sans",
col.axes = "darkorchid",
alpha.points = .25,
alpha.axes = 0.2,
width.axes = 1.1,
col.background = adjustcolor("lavender",
alpha.f = 0.2),
force = 1, segment.size = 3)
#Nationality map
title4RVp <- "RV Analysis of Participants \nIncluding Group Means and Confidence Intervals"
n.rv.meansp <- createFactorMap(n.adjmeansp,
axis1 = 1, axis2 = 2,
constraints = BaseMap.Participantsp$constraints,
col.points =  unique(col4partxhca),
alpha.points = .7, # no transparency
alpha.labels = 1,
display.points = TRUE,
pch = 17, cex = 5,
display.labels = TRUE,
#                              title = title4RV,
col.labels = unique(col4partxhca),
text.cex = 6,font.face = "bold",
font.family = "sans", col.axes = "darkorchid",
alpha.axes = 0.2, width.axes = 1.1,
col.background = adjustcolor("lavender", alpha.f = 0.2),
force = 1, segment.size = 0)
a.04adj.map4part <- BaseMap.Participantsp$zeMap_background +
n.rv.meansp$zeMap_text + n.rv.meansp$zeMap_dots +
BaseMap.Participantsp$zeMap_dots +# n.elliadjp + n.toladjp +
labels4RV + ggtitle("MDS: Participants grouped by the results of the HCA performed on the factor scores.") +
theme(plot.title = element_text(size = 13, family = "serif"),
axis.title = element_text(size = 13, face = "italic", family = "serif"))
print(a.04adj.map4part)
a.04adj.map4part <- BaseMap.Participantsp$zeMap_background +
n.rv.meansp$zeMap_text + n.rv.meansp$zeMap_dots +
BaseMap.Participantsp$zeMap_dots +# n.elliadjp + n.toladjp +
labels4RV + ggtitle("") +
theme(plot.title = element_text(size = 13, family = "serif"),
axis.title = element_text(size = 13, face = "italic", family = "serif"))
print(a.04adj.map4part)
