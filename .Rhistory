col.background = adjustcolor("lavender",
alpha.f = 0.2),
force = 1, segment.size = 3)
#Nationality map
title4RVp <- "RV Analysis of Participants \nIncluding Group Means and Confidence Intervals"
n.rv.meansp <- createFactorMap(n.adjmeansp,
axis1 = 1, axis2 = 2,
constraints = BaseMap.Participantsp$constraints,
col.points =  unique(col4partxhca),
alpha.points = .7, # no transparency
alpha.labels = 1,
display.points = TRUE,
pch = 17, cex = 5,
display.labels = TRUE,
#                              title = title4RV,
col.labels = unique(col4partxhca),
text.cex = 6,font.face = "bold",
font.family = "sans", col.axes = "darkorchid",
alpha.axes = 0.2, width.axes = 1.1,
col.background = adjustcolor("lavender", alpha.f = 0.2),
force = 1, segment.size = 0)
a.04adj.map4part <- BaseMap.Participantsp$zeMap_background +
n.rv.meansp$zeMap_text + n.rv.meansp$zeMap_dots +
BaseMap.Participantsp$zeMap_dots +# n.elliadjp + n.toladjp +
labels4RV + ggtitle("MDS: Participants grouped by the results of the HCA performed on the factor scores.") +
theme(plot.title = element_text(size = 13, family = "serif"),
axis.title = element_text(size = 13, face = "italic", family = "serif"))
print(a.04adj.map4part)
a.04adj.map4part <- BaseMap.Participantsp$zeMap_background +
n.rv.meansp$zeMap_text + n.rv.meansp$zeMap_dots +
BaseMap.Participantsp$zeMap_dots +# n.elliadjp + n.toladjp +
labels4RV + ggtitle("") +
theme(plot.title = element_text(size = 13, family = "serif"),
axis.title = element_text(size = 13, face = "italic", family = "serif"))
print(a.04adj.map4part)
?TExPosition
??TExPosition
?dist
?hclust
rm(list = ls())
gc()
# Seed for random number generation
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, fig.align = "center",cache.extra = knitr::rand_seed)
set.seed(42)
papaja::r_refs("r-references.bib")
library("papaja")
suppressMessages(library(ExPosition))
suppressMessages(library(InPosition))
suppressMessages(library(MExPosition))
library(PTCA4CATA)
library(purrr)
library(plyr)
library(tidyverse)
library(readxl)
library(stringr)
library(stringi)
library(rlist)
library(wesanderson)
#library(kableExtra)
library(ggplotify)
library(gridExtra)
library(grid)
library(abind)
powerpointFilename <- 'Music-Descriptor-Space.pptx'
path2pptx    <- './Analysis/'
name4Graphs  <- paste0(path2pptx,powerpointFilename)
title4Graphs <- 'Music Descriptor Space '
load("catadatamusdim.RData")
musdimdata <- catadata.list$contingency#[,order(colnames(catadata.list$contingency))]
numberofdims <- catadata.list$numberofdims#[order(names(catadata.list$numberofdims))]
thebrick <- catadata.list$thebrick#[,order(colnames(catadata.list$contingency)),]
rows2drop <- c(6,14)
musdimdata.no6 <- musdimdata[-rows2drop,]
thebrick.no6 <- thebrick[-rows2drop,,]
# reorder some of the columns in the french experts dataset,
# taking only the ones we want to analyse for now
fr.ex.data <- catadata.list$french.expert.data[c(1:3,6,7,9:12),c(1,4,5,6,7)]
colnames(fr.ex.data) <- c("age", "gen", "nat", "tr_yrs", "tr_type")
fr.ex.data$gen[which(fr.ex.data$gen == "Homme")] <- "M"
fr.ex.data$gen[which(fr.ex.data$gen == "Femme")] <- "F"
fr.ex.data$nat <- "France"
fr.ex.data$tr_type[which(fr.ex.data$tr_type == "Instrumentale")] <- "Inst"
fr.ex.data$tr_type[which(fr.ex.data$tr_type == "Vocale")] <- "Voc"
am.ex.data <- catadata.list$expert.data[,c(1:3,6,7)]
colnames(am.ex.data) <- colnames(fr.ex.data)
am.ex.data$nat <- "USA"
am.ex.data$gen[which(am.ex.data$gen == "Male")] <- "M"
am.ex.data$gen[which(am.ex.data$gen == "Female")] <- "F"
am.ex.data$tr_type[which(am.ex.data$tr_type == "Instrumental")] <- "Inst"
am.ex.data$tr_type[which(am.ex.data$tr_type == "Vocal")] <- "Voc"
# Bind it all together
ex.data <- rbind(am.ex.data, fr.ex.data)
bygender <- as.factor(ex.data$gen)
bynationality <- as.factor(ex.data$nat)
dimcares.inf <- epCA.inference.battery(musdimdata.no6,
masses= NULL, weights= NULL,
hellinger = FALSE, symmetric = TRUE,
graphs =FALSE, test.iters = 1000)
# Factor Scores
FIsym  <- dimcares.inf$Fixed.Data$ExPosition.Data$fi
#FIasym <- RenormFi$G_A
FJs    <- dimcares.inf$Fixed.Data$ExPosition.Data$fj
CA.Q.Eigs <- dimcares.inf$Fixed.Data$ExPosition.Data$eigs
CA.Q.pEig <- dimcares.inf$Inference.Data$components$eigs.perm
# Participant colors:
col4M <- wes_palettes$Zissou1[1]
col4F <- wes_palettes$Zissou1[5]
col4FR <- wes_palettes$Darjeeling2[2]
col4AM <- wes_palettes$Darjeeling1[1]
#
col4byG <- as.character(bygender)
col4byG[col4byG == "F"] <- col4F
col4byG[col4byG == "M"] <- col4M
col4byN <- as.character(bynationality)
col4byN[col4byN == "France"] <- col4FR
col4byN[col4byN == "USA"] <- col4AM
# To account for the fact that we removed some rows above:
#numberofdims[c(1,3,7,10,11)] <- c(6,7,8,3,4)
#numberofdims <- numberofdims[-2]
#numberofdims[c(1,7,8,9,10)] <- c(8,7,3,4,6)
#numberofdims <- numberofdims[-11]
col4cols <- wes_palette("FantasticFox1",
length(numberofdims), type = "continuous")
col4cols <- rep(col4cols, numberofdims)
bootCA <- Boot4PTCA(ZeDataCube = thebrick.no6,
fi = FIsym,
fj = FJs,
eigs = CA.Q.Eigs,
nf2keep = 3,
nBootIter = 500)
# Compute Bootstrapped ratios
bootRatios.I <- PTCA4CATA::boot.ratio.test(bootCA$RowsBoot,
critical.value = 2)
bootRatios.J <- PTCA4CATA::boot.ratio.test(bootCA$ColumnsBoot,
critical.value = 2)
# Probabilities
probBR.I  <- bootRatios.I$prob.boot.ratios
probBR.J  <- bootRatios.J$prob.boot.ratios
# We have a problem here because most matrices
#  have lines with zeros. A symmetric difference matrix
#  would do better than an RV or a
#  chi2 distance so we use createSymDist4PTCA
Cmat.Q <- createSymDist4PTCA(thebrick)$CrossProduct
# Calculate the eigenvalues and the percentage of variance extracted (tau)
eigenCmat.Q <- eigen(Cmat.Q, symmetric = TRUE)
eig4Cmat.Q <-  eigenCmat.Q$values
tau4Cmat.Q <- round( (100*eig4Cmat.Q) / sum(eig4Cmat.Q))
# Calculate factor scores for the first three dimensions
nk       <- 3
F4Cmat.Q   <- eigenCmat.Q$vectors[,1:nk] %*% diag(eig4Cmat.Q[1:nk]^(1/2))
# Prep for plotting
Shortnames4Participants.Q <-  dimnames(thebrick[[3]])
rownames(F4Cmat.Q) <- Shortnames4Participants.Q
# Make labels
labels4RV.Q <- createxyLabels.gen(1,2,lambda = eig4Cmat.Q, tau = tau4Cmat.Q)
D.dim14ttest <- F4Cmat.Q[,1]
D.dim24ttest <- F4Cmat.Q[,2]
d.test1 <- aov(D.dim14ttest ~ bynationality) %>% apa_print
d.test2 <- aov(D.dim24ttest ~ bynationality) %>% apa_print
dim1eigperc <- round(100*(dimcares.inf$Fixed.Data$ExPosition.Data$eigs[1]/sum(dimcares.inf$Fixed.Data$ExPosition.Data$eigs)), 2)
dim2eigperc <- round(100*(dimcares.inf$Fixed.Data$ExPosition.Data$eigs[2]/sum(dimcares.inf$Fixed.Data$ExPosition.Data$eigs)), 2)
dim3eigperc <- round(100*(dimcares.inf$Fixed.Data$ExPosition.Data$eigs[3]/sum(dimcares.inf$Fixed.Data$ExPosition.Data$eigs)), 2)
dim4eigperc <- round(100*(dimcares.inf$Fixed.Data$ExPosition.Data$eigs[4]/sum(dimcares.inf$Fixed.Data$ExPosition.Data$eigs)), 2)
mus.scree <- PlotScree(ev = dimcares.inf$Fixed.Data$ExPosition.Data$eigs,
p.ev = dimcares.inf$Inference.Data$components$p.vals,
plotKaiser = T, color4Kaiser = "red", title = " "
)
mus.00.scree <- recordPlot()
load("excerptsdesign.RData")
col4exgrp <- excerptsdesign$ex.design$col4exgrp
ex.cols <- excerptsdesign$ex.design$ex.cols
names(col4exgrp) <- rownames(musdimdata.no6)
axisone = 1
axistwo = 2
rownames(FIsym)<- c(1:5,7:13,15:30)
unsignedCJ <- dimcares.inf$Fixed.Data$ExPosition.Data$cj[,1:2]
signedCJ <- dimcares.inf$Fixed.Data$ExPosition.Data$cj * sign(FJs)
sig.colsonly <-  rownames(FJs)[(unsignedCJ[,1] > (1/nrow(FJs))) |
(unsignedCJ[,2] > (1/nrow(FJs))) ]
sig.FJs <- FJs[sig.colsonly,1:5]
col4sigcolsonly <- col4cols[(unsignedCJ[,1] > (1/nrow(FJs))) |
(unsignedCJ[,2] > (1/nrow(FJs))) ]
mat6 <- as.matrix(catadata.list$contingency[c(6,14),])
colnames(mat6) <- colnames(catadata.list$contingency)
#test <- epCA(musdimdata.no6,
#                  masses= NULL, weights= NULL,
#                 hellinger = FALSE, symmetric = TRUE,
#                 graphs =FALSE)
proj6 <- supplementaryRows(mat6, dimcares.inf$Fixed.Data)
rownames(proj6$fii) <- c("6","14")
scoresw6 <- rbind(FIsym, proj6$fii)
cols4proj <- c(col4exgrp, gplots::col2hex(c("blueviolet", "blueviolet")))
desc_groups <- excerptsdesign$ex.design$col4exgrp
dgf <- excerptsdesign$ex.design$thedesign
desc_groups[dgf == "ex.group1"] <- "Group 1"
desc_groups[dgf == "ex.group2"] <- "Group 2"
desc_groups[dgf == "ex.group3"] <- "Group 3"
desc_groups[dgf == "ex.group4"] <- "Group 4"
desc_groups <- c(desc_groups, "Projected", "Projected")
desc_groups <- as.factor(desc_groups)
#ti.qs.12 <- MakeToleranceIntervals(scoresw6, design = desc_groups, col = unique(cols4proj))
#+ ti.qs.12
exmap.sym.12 <- createFactorMapIJ(scoresw6,
sig.FJs,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols4proj,
col.labels.i = cols4proj,
col.points.j = col4sigcolsonly,
col.labels.j = col4sigcolsonly,
text.cex.i = 4, text.cex.j = 4,
cex.i = 4, cex.j = 4,
font.face.j = "italic",
alpha.labels.i = 1, alpha.labels.j = 1
)
vc.labels.12 <- createxyLabels(resCA = dimcares.inf$Fixed.Data, x_axis = axisone, y_axis = axistwo)
mus.012.i <- exmap.sym.12$baseMap +
exmap.sym.12$I_points +
exmap.sym.12$I_labels +
vc.labels.12 + ggtitle('Excerpts') +
theme(plot.title = element_text(size = 18, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
mus.012.j <- exmap.sym.12$baseMap +
exmap.sym.12$J_points +
exmap.sym.12$J_labels +
vc.labels.12 + ggtitle('Musical Qualities') +
theme(plot.title = element_text(size = 18, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"))
#print(mus.012.i)
#print(mus.012.j)
#mus.012.023 <- recordPlot()
##grid.arrange(
#    as.grob(mus.012.i),as.grob(mus.012.j),
#    ncol = 2,nrow = 1#,
# top = textGrob("Symmetric Maps of the Row and Column Factor Scores", gp = gpar(fontsize = 18, font = 3))
#  )
signed.ctrI <- dimcares.inf$Fixed.Data$ExPosition.Data$ci * sign(FIsym)
signed.ctrJ <- dimcares.inf$Fixed.Data$ExPosition.Data$cj * sign(FJs)
CIlist.dim <- vector(mode = "list", length = 6)
CJlist.dim <- vector(mode = "list", length= 6)
names(CIlist.dim) <- c("Dim1", "Dim2", "Dim3", "Dim1cols", "Dim2cols", "Dim3cols")
names(CJlist.dim) <- c("Dim1", "Dim2", "Dim3", "Dim1cols", "Dim2cols", "Dim3cols")
for (i in 1:3){
CIlist.dim[[i]] <- signed.ctrI[which(abs(signed.ctrI[,i]) > 1/nrow(signed.ctrI)),i]
CJlist.dim[[i]] <- signed.ctrJ[which(abs(signed.ctrJ[,i]) > 1/nrow(signed.ctrJ)),i]
CJlist.dim[[i]] <- CJlist.dim[[i]][order(names(CJlist.dim[[i]]))]
}
names(col4cols) <- colnames(musdimdata.no6)
for (i in 4:6){
CIlist.dim[[i]] <- col4exgrp[names(col4exgrp) %in% names(CIlist.dim[[i-3]])]
CJlist.dim[[i]] <- col4cols[names(col4cols) %in% names(CJlist.dim[[i-3]])]
CJlist.dim[[i]] <- CJlist.dim[[i]][order(names(CJlist.dim[[i]]))]
}
col4barsQ <- vector(mode = "list", length = 6)
names(col4barsQ) <- c("IDim1", "JDim1", "IDim2", "JDim2", "IDim3", "JDim3")
nrows <- nrow(signed.ctrI)
# plot contributions of rows for component 1
ctrI.1 <- PrettyBarPlot2(CIlist.dim$Dim1,
threshold = 1 / NROW(signed.ctrI),
font.size = 3,
color4bar = CIlist.dim$Dim1cols,  #col4exgrp[which(abs(signed.ctrI[,1]) > 1/nrow(signed.ctrI))] , # we need hex code
ylab = 'Contributions', #sortValues = TRUE,
ylim = c(1.2*min(signed.ctrI[,1]), 1.2*max(signed.ctrI[,1]))
) + ggtitle("Dimension 1", subtitle = 'Rows') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of columns for component 1
ctrJ.1 <- PrettyBarPlot2(CJlist.dim$Dim1,#[order(names(CJlist.dim$Dim1))],
threshold = 1 / NROW(signed.ctrJ),
font.size = 3,
color4bar = CJlist.dim$Dim1cols,  #cols4conts[which(abs(signed.ctrJ[,1]) > 1/nrow(signed.ctrJ))], # we need hex code
ylab = 'Contributions',
ylim = c(2.5*min(signed.ctrJ[,1]), 1.75*max(signed.ctrJ[,1]))
) + ggtitle("", subtitle = 'Columns') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of rows for component 2
ctrI.2 <- PrettyBarPlot2(CIlist.dim$Dim2,
threshold = 1 / NROW(signed.ctrI),
font.size = 3,
color4bar = col4exgrp[which(abs(signed.ctrI[,2]) > 1/nrow(signed.ctrI))] , # we need hex code
ylab = 'Contributions',
ylim = c(1.2*min(signed.ctrI[,2]), 1.2*max(signed.ctrI[,2]))
) + ggtitle("Dimension 2", subtitle = 'Rows') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
# plot contributions of columns for component 2
ctrJ.2 <- PrettyBarPlot2(CJlist.dim$Dim2,
threshold = 1 / NROW(signed.ctrJ),
font.size = 3,
color4bar = CJlist.dim$Dim2cols, # we need hex code
ylab = 'Contributions',
ylim = c(2.4*min(signed.ctrJ[,2]), 3.5*max(signed.ctrJ[,2]))
) + ggtitle("", subtitle = 'Columns') + theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 14, face = "italic", family = "serif"),
plot.subtitle = element_text(size = 14, face = "italic", family = "serif"))
#grid.arrange(
#    as.grob(ctrI.1),as.grob(ctrJ.1),
#    as.grob(ctrI.2),as.grob(ctrJ.2),
#    ncol = 2,nrow = 2#, top = textGrob("Contributions, Qualities Survey", gp = gpar(fontsize = 18, font = 3))
#  )
#Ctr.IJ <- recordPlot()
#1 - blue, 2 - red, 3 - green, 4 - yellow
rm(list = ls())
load("adj.catadata.list.RData")
load("excerptsdesign.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")
partcols <- adj.catadata.list$partcols
adjbrick <- adj.catadata.list$adjbrick
adj.contingency <- adj.catadata.list$adjcontingency
adjcols <- adj.catadata.list$adjcols
listofwords <- adj.catadata.list$listofwords
nat.factor <- partcols$nationality
col4nat <- nat.factor
nat.factor <- as.factor(nat.factor)
#cols$n.oc[nat.factor == "AM"] <- "#FF0000"
#cols$n.oc[nat.factor == "FR"] <- "#046C9A"
#cols$n.gc[1] <- "#FF0000"
#cols$n.gc[2] <- "#046C9A"
adjsym.cares <- epCA.inference.battery(adj.contingency,
symmetric = TRUE)
adjrenorm <- CARenormalization(adjsym.cares$Fixed.Data$ExPosition.Data$fi,
delta = adjsym.cares$Fixed.Data$ExPosition.Data$pdq$Dv,
singularValues = T,
masses = adjsym.cares$Fixed.Data$ExPosition.Data$M
)
FIsym.adj <- adjsym.cares$Fixed.Data$ExPosition.Data$fi
FIasym.adj <- adjrenorm$G_A
FJs.adj <- adjsym.cares$Fixed.Data$ExPosition.Data$fj
CAEigs.adj <- adjsym.cares$Fixed.Data$ExPosition.Data$eigs
# Bootstrapping
bootCA.adj <- Boot4PTCA(ZeDataCube = adjbrick,
fi = FIsym.adj,
fj = FJs.adj,
eigs = CAEigs.adj,
nf2keep = 3,
nBootIter = 1000)
# Compute Bootstrapped ratios
bootRatadj.I <- PTCA4CATA::boot.ratio.test(bootCA.adj$RowsBoot,
critical.value = 2)
bootRatadj.J <- PTCA4CATA::boot.ratio.test(bootCA.adj$ColumnsBoot,
critical.value = 2)
# Probabilities
probBRadj.I  <- bootRatadj.I$prob.boot.ratios
probBRadj.J  <- bootRatadj.J$prob.boot.ratios
# Permutation tests
#adjca.inf <- perm4PTCA(aCube = adjbrick,
#                       nIter = 1000,
#                       permType = 'byRows' ,
#                       Malinvaud = TRUE)
#Ind.Permu.adj    <- adjca.inf$permInertia
#InertiaFixed.adj <- adjca.inf$fixedInertia
#prob.cpt.lst.adj <- adjca.inf$MalinvaudQ['p-perm',]
# Get the p values for the components
#prob.cpt.adj <- (unlist(prob.cpt.lst.adj[2:length(prob.cpt.lst.adj)]))
#prob.cpt.adj[is.na(prob.cpt.adj)] <- 1
Cmat.adj <- createSymDist4PTCA(adjbrick)$CrossProduct
eigenCmat.adj <- eigen(Cmat.adj, symmetric = TRUE)
eig4Cmat.adj <-  eigenCmat.adj$values
tau4Cmat.adj <- round( (100*eig4Cmat.adj) / sum(eig4Cmat.adj))
nk       <- 100
F4Cmat.adj   <- eigenCmat.adj$vectors[,1:nk] %*% diag(eig4Cmat.adj[1:nk]^(1/2))
rownames(F4Cmat.adj) <- rownames(Cmat.adj)
F4dist <- F4Cmat.adj
rownames(F4dist) <- partcols$nationality
cmat.D <- dist(F4dist)
fit.p <- hclust(cmat.D, method = "ward.D2")
ngroups <- 2
col4extree <- cols$n.gc
part.groups <- cutree(fit.p, k= ngroups)
col4partxhca <- recode(part.groups,
"1" = col4extree[2],
"2" = col4extree[1]
)
mus.tree4parts <- factoextra::fviz_dend(fit.p,  k = 2,
#                        k_colors = unique(col4extree.w6),
#                        label_cols = col4extree.w6,
cex = .75, xlab = 'Participants',
main = ' ',
rect = TRUE, rect_fill = TRUE)  + theme(plot.title = element_text(size = 14, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
#print(mus.tree4parts)
labelscolor <- cbind(fit.p$labels, part.groups) %>% as.data.frame()
labcolgroup <- labelscolor %>% group_by(V1, part.groups) %>% summarise(number = n() )
#labcolgroup
posthocperc <- c(101/112, 81/166, 11/112, 85/166)
ScreeInf <- PlotScree(ev = eig4Cmat.adj,
max.ev = NULL, alpha = 0.05,
col.ns = "#006D2C", col.sig = "#54278F", title = " ",
#title = "Participants Distance Analysis, Adjectives Survey: \nExplained Variance per Dimension",
plotKaiser = T)
a000.adj.screeRV <-  recordPlot()
adj.tau <- adjsym.cares$Fixed.Data$ExPosition.Data$t
adj.scree <- PlotScree(adjsym.cares$Fixed.Data$ExPosition.Data$eigs,
p.ev = adjsym.cares$Inference.Data$components$p.vals,
plotKaiser = T, color4Kaiser = "red", title = " ")
mus.00.scree <- recordPlot()
rownames(FIsym.adj) <- c(1:16,18:30)
axisone <- 1
axistwo <- 2
exmap <- createFactorMapIJ(FIsym.adj,
FJs.adj,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols$ex.oc,
col.labels.i = cols$ex.oc,
col.points.j = cols$adj.oc,
col.labels.j = cols$adj.oc,
text.cex.i = 3.5, text.cex.j = 3.5,
font.face.j = 'italic',
)
vc.labels <- createxyLabels(resCA = adjsym.cares$Fixed.Data)
mus.adj.fi <- exmap$baseMap + #zePoly.J +
exmap$I_points +
exmap$I_labels +
#  exmap$J_points +
#  exmap$J_labels +
vc.labels + ggtitle('Excerpts') +
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
mus.adj.fj <- exmap$baseMap + #zePoly.J +
#  exmap$I_points +
#   exmap$I_labels +
exmap$J_points +
exmap$J_labels +
vc.labels + ggtitle('Adjectives')+
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
grid.arrange(
as.grob(mus.adj.fi),as.grob(mus.adj.fj),
as.grob(mus.adj.amj),as.grob(mus.adj.frj),
ncol = 1,nrow = 2# ,top = textGrob("Factor Plots for the Adjectives Survey", gp = gpar(fontsize = 22, font = 3))
)
rownames(FIsym.adj) <- c(1:16,18:30)
axisone <- 1
axistwo <- 2
exmap <- createFactorMapIJ(FIsym.adj,
FJs.adj,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols$ex.oc,
col.labels.i = cols$ex.oc,
col.points.j = cols$adj.oc,
col.labels.j = cols$adj.oc,
text.cex.i = 3.5, text.cex.j = 3.5,
font.face.j = 'italic',
)
vc.labels <- createxyLabels(resCA = adjsym.cares$Fixed.Data)
mus.adj.fi <- exmap$baseMap + #zePoly.J +
exmap$I_points +
exmap$I_labels +
#  exmap$J_points +
#  exmap$J_labels +
vc.labels + ggtitle('Excerpts') +
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
mus.adj.fj <- exmap$baseMap + #zePoly.J +
#  exmap$I_points +
#   exmap$I_labels +
exmap$J_points +
exmap$J_labels +
vc.labels + ggtitle('Adjectives')+
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
grid.arrange(
as.grob(mus.adj.fi),as.grob(mus.adj.fj),
#as.grob(mus.adj.amj),as.grob(mus.adj.frj),
ncol = 1,nrow = 2# ,top = textGrob("Factor Plots for the Adjectives Survey", gp = gpar(fontsize = 22, font = 3))
)
grid.arrange(
as.grob(mus.adj.fi),as.grob(mus.adj.fj),
#as.grob(mus.adj.amj),as.grob(mus.adj.frj),
ncol = 1,nrow = 2# ,top = textGrob("Factor Plots for the Adjectives Survey", gp = gpar(fontsize = 22, font = 3))
)
rownames(FIsym.adj) <- c(1:16,18:30)
axisone <- 1
axistwo <- 2
exmap <- createFactorMapIJ(FIsym.adj,
FJs.adj,
axis1 = axisone,axis2 = axistwo,
col.points.i = cols$ex.oc,
col.labels.i = cols$ex.oc,
col.points.j = cols$adj.oc,
col.labels.j = cols$adj.oc,
text.cex.i = 3.5, text.cex.j = 3.5,
font.face.j = 'italic',
)
vc.labels <- createxyLabels(resCA = adjsym.cares$Fixed.Data)
mus.adj.fi <- exmap$baseMap + #zePoly.J +
exmap$I_points +
exmap$I_labels +
#  exmap$J_points +
#  exmap$J_labels +
vc.labels + ggtitle('Excerpts') +
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
mus.adj.fj <- exmap$baseMap + #zePoly.J +
#  exmap$I_points +
#   exmap$I_labels +
exmap$J_points +
exmap$J_labels +
vc.labels + ggtitle('Adjectives')+
theme(plot.title = element_text(size = 16, family = "serif"),
axis.title = element_text(size = 12, face = "italic", family = "serif"))
grid.arrange(
as.grob(mus.adj.fi),as.grob(mus.adj.fj),
#as.grob(mus.adj.amj),as.grob(mus.adj.frj),
ncol = 1,nrow = 2# ,top = textGrob("Factor Plots for the Adjectives Survey", gp = gpar(fontsize = 22, font = 3))
)
grid.arrange(
as.grob(mus.adj.fi),as.grob(mus.adj.fj),
#as.grob(mus.adj.amj),as.grob(mus.adj.frj),
ncol = 1,nrow = 2# ,top = textGrob("Factor Plots for the Adjectives Survey", gp = gpar(fontsize = 22, font = 3))
)
