---
title: "musicdesc_scratchpad"
author: "Brendon Mizener"
date: "3/15/2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.



  Fewer studies have used adjectives to evaluate music holistically (examples include @Wedin1969, @Wedin1972, @Hevner1936, @Canazza2001].  
  Other studies exist that evaluate how various technical aspects of music correspond to emotions for the purpose of induction, (see @Bruner1990 for an early summary) but the musical characteristics don't accurately capture the full dimensionality that composers consider when writing music. Also, many of the studies that investigate from this perspective impose strict limitations on how the stimuli vary, which is useful for illuminating very specific effects of a single musical element or characteristic, but makes it impossible to evaluate interactions between any musical variables. Assessing the interplay between the technical aspects of music and descriptive/affective requires a fine - grained approach that is able to evaluate the correlations and covariates between many dimensions simultaneously. Imaging studies that evaluate the neural response to music could be very valuable here, but they require prohibitive amounts of resources, are severely location-dependent. That being said, there are multivariate techniques that are commonly used in imaging studies that are designed for the specific purpose of what we aim with this study.
  Few studies using multivariate analyses to evaluate music holistically have used all four: large numbers of stimuli, large numbers of descriptors, and a large sample size, and ecologically valid musical stimuli. @Canazza2001, for example, only used a single stimulus. @Wedin1972 used a large number of stimuli (35), a large number of 'attributes' (150), but a sample size of only 49.
  One way to minimize the individual associations is to use novel music, but that requires controlling for familiarity. In a musically trained population, the easiest way to do that is to compose novel music, so we composed 30 novel stimuli for this specific study.  
A recent study  

  This work should be considered 


  Research on the perception of timbre has provided some useful templates in navigating this space. @Wallmark2018 notes that because timbre is not a linear phenomenon, as tempo or pitch is, qualitative descriptors make the most sense when evaluating it. A similar conceptual framework would ideally be applied to music to be evaluated holistically. In this regard, we consider the current work to be theoretically distinct from works that specifically evaluate emotional perception in music. The present work does confirm the results of those studies thanks to the appearance of the valence-arousal plane. However, we did not intentionally use emotionally valenced adjectives when selecting the vocabulary participants used to rate stimuli. Additionally, we compare the descriptors to music-theoretical dimensions that are rated on discrete scales in order to evaluate which elements from either set of descriptors covary with one another.
  Another specific reference in the study of timbre that provides a useful comparison is @Zacharakis2014 This study addresses not only the qualitative nature of analysis, but serves as an interesting guidepost in terms of intercultural or inter-lingual music evaluation. @Zacharakis2014 found that for two different languages, meaning was largely 

  
  
  - we used correspondence analysis inste4ad of a nother form of factor or multivariate analysis, which allows for biplots. this will allow you to see not only where the adjctives lie in the factor space4, but also where the musical descriptors/quialities lie in atheir own factor space. While  the biplot specifically then allows you to plot the excerpts in the same space as the descriptors, which provides a clear, quick, visual reference for what excerpts or musical pieces fall in to what space of the cognitive space. 


 By developing investigative paradigms that are accessible on mobile platforms, and that reduce participant demand as much as possible while maintaining rigor, we are likely to be able to reach a much greater subset of the population. If we are able to pair this kind of data gathering with appropriate exploratory analysis, we can target much more effectively where we might investigate with more traditional hypothesis testing.
  The initial motivation for this paper was as precursor work to a study aimed at evaluating the cross-modal similarities between gustatory perception and auditory perception. There exist various established gustatory 'spaces' onto which music perception might be mapped, for example in wine tasting [wine citations here], the only analogous space in music listening deals specifically with emotional processing. The goal of this study was to evaluate whether or not there is a similar music perception space against which other sensory domains could be compared, and to select stimuli that could anchor the corners of such a space. 




In this study, we attempt to address three specific issues with the field as a whole: sample & size, mode of investigation, and balancing  analysis. The gradual increase in complexity of studies in behavior and cognition, coupled with the rise of questions about the universality of experience and the democratization of science, compels us to find novel ways of investigating the experience of music. 


  A review of the literature surrounding music perception quickly reveals a limited perspective. Firstly, the participants in these experiments are largely WEIRD (Western, Educated, Industrialized, Rich, and Democratic). The participant pool becomes even smaller when you realize that researchers commonly use students in their departments as participants, either psychology or music, or in some cases marketing or business. This practice inherently biases the sample towards wealth and the ethnic majority, as representation and access to higher education remains an issue. In terms of stimuli, although there is a database of over 20000 previously used musical excerpts [@Warrenburg2020], the vast majority of those are either western or popular music. These stimuli are also often presented under strict laboratory control, which we respectfully submit does not reflect an ecologically valid process for listening. 

  In addition to the questions surrounding data collection, the gradual increase in complexity of studies in behavior and cognition, the rise of questions about the universality of experience, and the democratization of science all compel us to find novel ways of investigating the experience of music, among other aspects of life. The experimental paradigm we present below addresses a number of questions.  
  
  We as researchers need to develop experimental paradigms that are robust to violations in experimental procedure, in order to access a larger part of the population,  The burden to define testing parameters and provide clear analysis becomes much greater. Controlling for extraneous variables becomes a problem in and of itself. The balance between establishing a broad research question and analyzing with precision is very delicate. Additionally, accessing a broader population is necessary, but the concerns of parametrization and control are similar. 





###################
  Much of the work in music cognition focused on adjectives or descriptors has focused on timbre. [citations: Wallmark, Zacharakis] Early work attempting this: @Hevner1936a

###################
  The current study aimed to evaluate a set of musical stimuli in two ways, by association with a list of adjectives, and by rating on a set of musical qualities. These will then be analyzed independently and then combined to see what effects can be deduced from the combination of the two.

###################
  Valence/arousal model


Existing multivariate approaches: 
@Roda2014a: uses clustering, not descriptors, compares directly to physical features of music. Attempts to quantify higher dimensions
@Droit-Volet2013a: uses point-scale ratings (unpleasant/pleasant; calm/exciting) and investigates effect of time on ratings.


  - as questions become more complex, the burden on researchers to define parameters in which to test and evaluate their results becomes much greater. Controlling for extraneous variables becomes a problem in and of itself.
  - lacks generalizability because of narrowness
  - rising question of universalities & cross-cultural perception in music 
  - how do we access a larger population

  - This all results in a need for an experimental paradigm that is robust to violations in experimental procedure, accesses 

  - After cleaning and preprocessing, the data for each participant will take the form of a pseudo contingency table. The difference here is that a contingency table is specifically when a participant selects only one option from a list for each stimulus, resulting in a table with one and only one one (1) per row. Because we are using the CATA technique, a one (1) at the intersection of each row or column indicates that the participant selected that adjective or musical quality for that stimulus. A zero means that they did not. These individual tables are all compiled into a 'brick', or three-dimensional array of data with Observations (stimuli) on the rows, variables (musical qualities or adjectives) on the columns, and participants on the third dimension, which we will refer to as 'pages' here. This brick is then summed across pages into a single table, so that any given cell contains the total number of times a participant selected a given adjective or quality to match with a stimulus. 
  From this point there are two sets of data that can be analyzed. The first is the 3D array, which can be analyzed using various distance analyses, to evaluate differences between the participants using grouping variables extracted from the demographics surveys. The other is the pseudo contingency table, which can be analyzed using various multivariate techniques.
  - what processing steps are needed



## Present questions & methods of analysis
  The initial motivation for this study came from a cross-modal study investigating cross modal sensory mapping between gustation perception, specifically beer, and music perception. Prior versions of this experiment (unpublished) suggest that a wide variety in musical stimuli was necessary to determine any correlations or differences. As such, this study is designed to investigate whether a music cognitive listening space can be established using this paradigm, to allow cross-modal comparison. Additional questions arise from the study itself: are there significant differences in how participants from different nationalities (and by extension musical cultures) perceive, or, more precisely, describe music? Are there parallels in how music is evaluated using music non-specific descriptors and music-specific qualities? Because this study was designed to be exploratory in nature, we feel it would be poor scientific practice to present specific hypotheses. 
  
  
  
  
```{r, fig.height=10}

load("catadatamusdim.RData")
load("adj.catadata.list.RData")
load("adjdesign.RData")
load("adjectivecolors.RData")

adjct <- adj.catadata.list$adjcontingency
quact <- catadata.list$contingency

data4mfa <- abind(adjct, quact, along = 2)

gr.vec <- data.frame(matrix(data = NA, nrow = 1, ncol = dim(data4mfa)[2]))

gr.vec[1,1:dim(adjct)[2]] <- "A"
gr.vec[1,(dim(adjct)[2]+1):(dim(adjct)[2]+dim(quact)[2])] <- "Q"

colnames(gr.vec) <- colnames(data4mfa)
rownames(gr.vec) <- "group"

mfatestres <- mpMFA(data4mfa, gr.vec)

renameCols <- function(x){
   colnames(x) <- paste("Dimension", 1:ncol(x))
   x
}

RVtestmat <- mfatestres$mexPosition.Data$InnerProduct$RVMatrix

corrplot::corrplot(RVtestmat, method = "color", addCoefasPercent = TRUE) 

Eig4testscree <- mfatestres$mexPosition.Data$Table$eigs

mfatestscree <- PlotScree(Eig4testscree, plotKaiser = TRUE)

MFA_testFMap <- createFactorMap(
                            mfatestres$mexPosition.Data$Table$fi,
                            col.points = cols$ex.oc,
                            col.labels = cols$ex.oc,
                            alpha.points = .6,
                            pch = 17,
                            cex = 5,
                            display.labels = TRUE,
                            constraints = minmaxHelper4Partial(FactorScores = mfatestres$mexPosition.Data$Table$fi,
                              partialFactorScores = mfatestres$mexPosition.Data$Table$partial.fi.array)
                            )
                            
label4testMap <- createxyLabels.gen(1,2,
                                lambda = mfatestres$mexPosition.Data$Table$eigs,
                                tau = mfatestres$mexPosition.Data$Table$t,
                                axisName = "Dimension ")




fi4testpfs <- mfatestres$mexPosition.Data$Table$fi

fi4testpfs <- renameCols(fi4testpfs)

pfi4testpfs <- mfatestres$mexPosition.Data$Table$partial.fi.array

pfi4testpfs <- renameCols(pfi4testpfs)

rownames(pfi4testpfs) <- c(1:30)

dimnames(pfi4testpfs)[[3]] <- c("A", "Q")

map4testPFS <- createPartialFactorScoresMap(
                                        factorScores = fi4testpfs,
                                        partialFactorScores = pfi4testpfs,
                                        axis1 = 1, axis2 = 2,
                                        colors4Items = cols$ex.oc,
                                        names4Partial = c("A", "Q"),
                                        font.labels = 'bold'
                                        )



                        
                                          
partialfstestmap <- MFA_testFMap$zeMap + 
                  label4testMap + 
                    map4testPFS$linesColByItems + 
                      map4testPFS$pointsColByItems + 
                        map4testPFS$labelsColByItems +
                          ggtitle("Contributions to the Excerpts Factor Scores")

print(partialfstestmap)

```
  
  

  One assumption we make in an analysis like this is that the sample is random, which may not always be the case. The music itself is not random, as repetition is a common compositional tool, and was used in the composition of some of the excerpts. Perhaps more importantly, the excerpts were all composed by the same composer, which means that they are subject to the inherent biases of that composer, and some musical qualities are inextricably linked --- for example some harmonic elements with genre [@Cohn2001]. Additionally, although it is common practice to use pseudo-contingency tables in correspondence analyses, as we have done here, many of the values in this type of table are not random. Whereas, in a contingency table, there should be only a single one (1) per row, associating an observation with a single column or variable, a pseudo-contingency table like the one used here has more than one one (1) per row, meaning that those counts are linked and thus not random. 
  
  With regard to the scree plots in Figures \@ref(fig:screeRVQ) and \@ref(fig:scree4excerptsq), there are a few guidelines on how many dimensions to interpret. One guideline, to analyze only dimensions with $\lambda$ > 1, aren't helpful in either case, because all dimensions but one computed by the MDS have $\lambda$ > 1 and all dimensions computed by the CA have $\lambda$ < 1. Another is to apply the 'elbow test', to interpret the dimensions that fall above an inflection point in the scree plot. This option is not entirely conclusive in either case, either, for example in the CA, there are clear inflection points at dimensions three and six, and possible inflection points at eleven and sixteen. A third option is to analyze only dimensions that are greater than the average, indicated by the 'Kaiser line', in red, which would indicate that we should analyze as many as eleven dimensions for the MDS and eight dimensions for the CA. This is an excellent example of why permutation testing can help understand the dimensionality of a multivariate space. Even with permutation testing, however, we suggest as a guideline to analyze only the dimensions that are interpretable.    
  
 Although they dominated the space when included in the sample, they are much closer to the barycenter of the plot when included as out of sample. Their placement indicates that the dimensionality of this space may in fact be related to musical genre or family. Were they to fall exactly on the origin, that would suggest that they shared no information whatsoever with the other excerpts included in the analysis. The disparity between their placement on the graph below and their placement on the graphs in which they are included in the main sample suggests that they share some information, but there is still a large amount of information that is not accounted for in the factor space depicted in Figure \@ref(fig:factormapsQ).  
 

# plots for judges (not included in main document)

```{r screeRV, fig.height = 4, fig.width = 8, include = FALSE}
# Scree plot with significance
ScreeInf <- PlotScree(ev = eig4Cmat.Q,
                      max.ev = NULL, alpha = 0.05,
                      col.ns = "#006D2C", plotKaiser = TRUE,
                      title = "Participants Distance Analysis, Musical Qualities Survey: \nExplained Variance per Dimension",
                      )
a000.00.screeRV <-  recordPlot()
```
```{=latex}
%\begin{wrapfigure}{h}{.5\textwidth}  
%  \begin{center}
%    \includegraphics{./Music-Descriptor-Space_files/figure-latex/screeRV-1.png}
%  \caption{ }(\#fig:screeRVQ)  
% \end{center}
%\end{wrapfigure}
```


```{r judgesplotQ, fig.height = 5, out.width = '75%'}

BaseMap.Nationality <- createFactorMap(X = F4Cmat.Q ,
                              axis1 = 1, axis2 = 2,
                              display.points = TRUE,
                              col.points = col4byN,
                              pch = 19, cex = 2.5, 
                              title = "Colored according to Nationality",
                              display.labels = TRUE,
                              col.labels = col4byN,
                              text.cex = 4, font.face = "bold",
                              font.family = "sans",
                              col.axes = "darkorchid",
                              alpha.axes = 0.2,
                              width.axes = 1.1,
                              col.background = adjustcolor("lavender",
                                                       alpha.f = 0.2),
                              force = 1, segment.size = 3)

BaseMap.Gender <- createFactorMap(X = F4Cmat.Q ,
                              axis1 = 1, axis2 = 2,
                              display.points = TRUE,
                              col.points = col4byG,
                              pch = 19, cex = 2.5,
                              title = "Colored according to Gender",
                              display.labels = TRUE,
                              col.labels = col4byG,
                              text.cex = 4, font.face = "bold",
                              font.family = "sans",
                              col.axes = "darkorchid",
                              alpha.axes = 0.2,
                              width.axes = 1.1,
                              col.background = adjustcolor("lavender",
                                                       alpha.f = 0.2),
                              force = 1, segment.size = 3)

gendermeans <- getMeans(F4Cmat.Q, bygender)
nationmeans <- getMeans(F4Cmat.Q, bynationality)

BootCube.N <- PTCA4CATA::Boot4Mean(F4Cmat.Q, design = bynationality,
                      niter = 100,
                      suppressProgressBar = TRUE)
dimnames(BootCube.N$BootCube)[[2]] <- paste0('Dimension ',
                                             1: dim(BootCube.N$BootCube)[[2]])

BootCube.G <- PTCA4CATA::Boot4Mean(F4Cmat.Q, design = bygender,
                      niter = 100,
                      suppressProgressBar = TRUE)
dimnames(BootCube.G$BootCube)[[2]] <- paste0('Dimension ',
                                             1: dim(BootCube.G$BootCube)[[2]])

n.ellipse <- MakeCIEllipses(BootCube.N$BootCube[,1:2,], 
                            names.of.factors = c("Dimension 1","Dimension 2"),
                            col = c(col4AM, col4FR))
g.ellipse <- MakeCIEllipses(BootCube.G$BootCube[,1:2,], 
                            names.of.factors = c("Dimension 1","Dimension 2"),
                            col = c(col4M, col4F))

n.symdist.means <- createFactorMap(nationmeans,
                              axis1 = 1, axis2 = 2, 
                              title = "Colored according to Nationality",
                              col.points =  c(col4AM, col4FR),
                              alpha.points = 1, # no transparency
                              constraints = BaseMap.Nationality$constraints,
                              display.points = TRUE,
                              pch = 19, cex = 5,
                              display.labels = TRUE,
                              col.labels = c(col4AM, col4FR), 
                              text.cex = 4,font.face = "bold",
                              font.family = "sans", col.axes = "darkorchid", 
                              alpha.axes = 0.2, width.axes = 1.1, 
                              col.background = adjustcolor("lavender", alpha.f = 0.2), 
                              force = 1, segment.size = 0)

g.symdist.means <- createFactorMap(gendermeans,
                              axis1 = 1, axis2 = 2, 
                              title = "Colored according to Gender",
                              col.points =  c(col4M, col4F),
                              alpha.points = 1, # no transparency
                              constraints = BaseMap.Gender$constraints,
                              display.points = TRUE,
                              pch = 19, cex = 5,
                              display.labels = TRUE,
                              col.labels = c(col4M, col4F), 
                              text.cex = 4,font.face = "bold",
                              font.family = "sans", col.axes = "darkorchid", 
                              alpha.axes = 0.2, width.axes = 1.1, 
                              col.background = adjustcolor("lavender", alpha.f = 0.2), 
                              force = 1, segment.size = 0)

a.01.map4part <- BaseMap.Nationality$zeMap_background + labels4RV.Q +
                   n.symdist.means$zeMap_dots + n.ellipse +
                    BaseMap.Nationality$zeMap_dots + n.symdist.means$zeMap_text
                    

a.02.map4part <- BaseMap.Gender$zeMap_background + labels4RV.Q +
                  g.symdist.means$zeMap_dots + g.ellipse +
                    BaseMap.Gender$zeMap_dots + g.symdist.means$zeMap_text

#grid.arrange(as.grob(a.01.map4part), 
#             as.grob(a.02.map4part), ncol = 2,
#             top = textGrob("Factor Scores for Experts", 
#                            gp = gpar(fontsize = 18, font = 3)))


```


```{r factormapsA, fig.height = 10, fig.show = 'hold', out.width='100%', include = FALSE}

adjbrick.AM <- adjbrick[,,1:length(which(adj.catadata.list$partcols$nationality == "AM"))]
adj.cont.AM <- apply(adjbrick.AM, c(1,2), sum)

adjbrick.FR <- adjbrick[,,(length(which(adj.catadata.list$partcols$nationality == "AM"))+1):dim(adjbrick)[[3]]]
adj.cont.FR <- apply(adjbrick.FR, c(1,2), sum)

adj.fr.cares <- epCA(adj.cont.FR, symmetric = TRUE)
adj.am.cares <- epCA(adj.cont.AM, symmetric = TRUE)

adj.fr.cares$ExPosition.Data$fi[,2] <- adj.fr.cares$ExPosition.Data$fi[,2]*-1
adj.fr.cares$ExPosition.Data$fj[,2] <- adj.fr.cares$ExPosition.Data$fj[,2]*-1

am.FI <- adj.am.cares$ExPosition.Data$fi
am.FJ <- adj.am.cares$ExPosition.Data$fj

fr.FI <- adj.fr.cares$ExPosition.Data$fi
fr.FJ <- adj.fr.cares$ExPosition.Data$fj

rownames(am.FI) <- rownames(fr.FI) <- rownames(FIsym.adj) <- c(1:30)


colnames(adjrenorm$G_A) <- colnames(FJs.adj)

axisone <- 1
axistwo <- 2

exmap <- createFactorMapIJ(FIsym.adj,
                           FJs.adj,
                           axis1 = axisone,axis2 = axistwo,
                           col.points.i = cols$ex.oc, 
                           col.labels.i = cols$ex.oc, 
                           col.points.j = cols$adj.oc, 
                           col.labels.j = cols$adj.oc,
                           text.cex.i = 3.5, text.cex.j = 3.5,
                           font.face.j = 'italic',
                           
                           )

vc.labels <- createxyLabels(resCA = adjsym.cares)

am.labels <- createxyLabels(resCA = adj.am.cares)

fr.labels <- createxyLabels(resCA = adj.fr.cares)

exmap.am <- createFactorMapIJ(am.FI,
                                am.FJ,
                                axis1 = axisone,axis2 = axistwo,
                                col.points.i = cols$ex.oc, 
                                col.labels.i = cols$ex.oc, 
                                col.points.j = cols$adj.oc, 
                                col.labels.j = cols$adj.oc,
                                text.cex.i = 3.5, text.cex.j = 3.5, font.face.j = 'italic'
                                
                                )



exmap.fr <- createFactorMapIJ(fr.FI,
                                fr.FJ,
                                axis1 = axisone,axis2 = axistwo,
                                col.points.i = cols$ex.oc, 
                                col.labels.i = cols$ex.oc, 
                                col.points.j = cols$adj.oc, 
                                col.labels.j = cols$adj.oc,
                                text.cex.i = 3.5, text.cex.j =3.5, font.face.j = 'italic'
                                )


mus.adj.ami <- exmap.am$baseMap + 
            exmap.am$I_points + 
              exmap.am$I_labels + 
                #exmap.am$J_points + 
                 # exmap.am$J_labels + 
                    am.labels + ggtitle("A. American Participants: Excerpts")

mus.adj.fri <- exmap.fr$baseMap +  
            exmap.fr$I_points + 
              exmap.fr$I_labels + 
              #  exmap.fr$J_points + 
               #   exmap.fr$J_labels + 
                    fr.labels + ggtitle('B. French Participants: Excerpts')

mus.adj.amj <- exmap.am$baseMap + 
          #  exmap.am$I_points + 
           #   exmap.am$I_labels + 
                exmap.am$J_points + 
                  exmap.am$J_labels + 
                    am.labels + ggtitle('C. American Participants: Adjectives')

mus.adj.frj <- exmap.fr$baseMap +  
            #exmap.fr$I_points + 
             # exmap.fr$I_labels + 
                exmap.fr$J_points + 
                  exmap.fr$J_labels + 
                    fr.labels + ggtitle('D. French Participants: Adjectives')


mus.adj.004 <- exmap$baseMap + #zePoly.J + 
            exmap$I_points + 
              exmap$I_labels + 
                exmap$J_points + 
                  exmap$J_labels + 
                    vc.labels + ggtitle('Symmetric Map of Row and Column Factor Scores')
  

grid.arrange(
    as.grob(mus.adj.ami),as.grob(mus.adj.fri),
    as.grob(mus.adj.amj),as.grob(mus.adj.frj),
    ncol = 2,nrow = 2 ,
    top = textGrob("Factor Plots for the Adjectives Survey", gp = gpar(fontsize = 22, font = 3))
 )

```


  To evaluate the stability of the ratings of the exerpts and the way participants used the adjectives, we computed bootstrap ratios for the rows and columns. 
  The barplots in Figure \@ref(fig:thebootsA) show the bootstrap ratios calculated for the rows and columns. All rows and columns are included to compare what clusters are consistently distributed in the space. This barplot was not included for Experiment 1 because it is less informative given that Experiment 1 evaluates the nature of the excerpts not the behavior of participants. There are more significant bootstrap ratios than there are significant contributions, which means that the model seems to be stable, and the few excerpts and adjectives that are not significant are likely significant on higher dimensions. All excerpts are stable on one dimension or the other, likewise all adjectives except 'sparse'. 
  
```{r bootstraps}
BR.I <- bootRatadj.I$boot.ratios
BR.J <- bootRatadj.J$boot.ratios

laDim = 1

# Plot the bootstrap ratios for Dimension 1
badj001.BR1.I <- PrettyBarPlot2(BR.I[,laDim],
                        threshold = 2,
                        font.size = 3,
                   color4bar = cols$ex.oc[order(BR.I[,laDim])], # we need hex code
                  ylab = 'Bootstrap ratios',
                  sortValues = TRUE,
) + ggtitle(paste0('Component ', laDim), subtitle = 'Excerpts')

badj002.BR1.J <- PrettyBarPlot2(BR.J[,laDim],
                        threshold = 2,
                        font.size = 3,
                   color4bar = cols$adj.oc[order(BR.J[,laDim])],
                  ylab = 'Bootstrap ratios',
                  sortValues = TRUE,
) + ggtitle("", subtitle = 'Adjectives')

# Plot the bootstrap ratios for Dimension 2
laDim = 2
badj003.BR2.I <- PrettyBarPlot2(BR.I[,laDim],
                        threshold = 2,
                        font.size = 3,
                   color4bar = cols$ex.oc[order(BR.I[,laDim])], # we need hex code
                  ylab = 'Bootstrap ratios',
                  sortValues = TRUE,
) + ggtitle(paste0('Component ', laDim), subtitle = 'Excerpts')

badj004.BR2.J <- PrettyBarPlot2(BR.J[,laDim],
                        threshold = 2,
                        font.size = 3,
                   color4bar = cols$adj.oc[order(BR.J[,laDim])],
                  ylab = 'Bootstrap ratios',
                  sortValues = TRUE, 
) + ggtitle("", subtitle = 'Adjectives')

```

```{r thebootsA, fig.width=14}

grid.arrange(
    as.grob(badj001.BR1.I),as.grob(badj002.BR1.J),
    as.grob(badj003.BR2.I),as.grob(badj004.BR2.J),
    ncol = 2,nrow = 2,
    top = textGrob("Bootstrap ratios", gp = gpar(fontsize = 18, font = 3))
  )

BRadj.IJ <- recordPlot()

```  



  For the purposes of this visualization, only the variables for which 70% or more of the variance is explained are shown. The nature of the PLSC also suggests that these are the variables that are most associated with one another between the two tables. The strongest signal on the first dimension juxtaposes the slow and legato musical qualities in the positive direction with the fast, staccato, marcato, and conjunct musical qualities in the negative direction. The adjectives associated with the qualities in the positive direction are "Dark", "Dull", "Long", "Melancholy", "Sad", "Slow", "Solemn", and "Weak." The adjectives associated with the negative direction are "Bright", "Colorful", "Dancing", "Fast", "Happy", and "Light".  
  The second dimension identified in the positive direction major harmony and medium dynamics, associated with "Light", "Round", "Soft", and "Warm". The negative direction is driven by the impressionist genre being associated with "Aggressive", "Complex", "Dense", "Disturbing", "Powerful", and "Surprising".
  
  


```{r loadingsplsc, fig.width = 10,  fig.height = 4, fig.show='hold', message=F}

ps <- pls.res$TExPosition.Data$pdq$p
qs <- pls.res$TExPosition.Data$pdq$q

th <- .7

pslist <- vector(mode = "list", length = 2)
qslist <- vector(mode = "list", length= 2)

names(qslist) <- c("Dim1", "Dim2")
names(pslist) <- c("Dim1", "Dim2")

p.names <- rownames(ps)
q.names <- rownames(qs)

for (i in 1:2){
  pslist[[i]] <- ps[which(abs(ps[,i]) > th*max(abs(ps[,i]))),i]
  qslist[[i]] <- qs[which(abs(qs[,i]) > th*max(abs(qs[,i]))),i]
  names(pslist[[i]]) <- p.names[abs(ps[,i]) > th*max(abs(ps[,i]))]
  names(qslist[[i]]) <- q.names[abs(qs[,i]) > th*max(abs(qs[,i]))]
  }

colors4plsc <- vector(mode = "list", length = 5)
names(colors4plsc) <- c("colors", "p.all","q.all","p.vec", "q.vec" )

colors4plsc$colors <- c(wes_palettes$Darjeeling1[c(1,2,4)],
                        wes_palettes$Darjeeling2[2])

colors4plsc$p.all <- ps
colors4plsc$p.all[colors4plsc$p.all > 0] <- colors4plsc$colors[1]
colors4plsc$p.all[colors4plsc$p.all != colors4plsc$colors[1]] <- colors4plsc$colors[2]

colors4plsc$q.all <- qs
colors4plsc$q.all[colors4plsc$q.all > 0] <- colors4plsc$colors[3]
colors4plsc$q.all[colors4plsc$q.all != colors4plsc$colors[3]] <- colors4plsc$colors[4]

colors4plsc$p.vec <- vector(mode = "list", length = 2)
colors4plsc$q.vec <- vector(mode = "list", length = 2)

names(colors4plsc$p.vec) <- c("Dim1", "Dim2")
names(colors4plsc$q.vec) <- c("Dim1", "Dim2")


for (i in 1:2){
  colors4plsc$p.vec[[i]] <- colors4plsc$p.all[which(abs(ps[,i]) > th*max(abs(ps[,i]))),i]
  colors4plsc$q.vec[[i]] <- colors4plsc$q.all[which(abs(qs[,i]) > th*max(abs(qs[,i]))),i]

}

loading1 <- PrettyBarPlot2(bootratio = c(pslist$Dim1, qslist$Dim1), 
                       threshold = min(c(th*max(abs(ps[,1])), th*max(abs(qs[,1])))), 
                       ylim = c(1.2*min(c(pslist$Dim1, qslist$Dim1)), 1.2*max(c(pslist$Dim1, qslist$Dim1))),
                       color4bar = c(colors4plsc$p.vec$Dim1, colors4plsc$q.vec$Dim1),
                       color4ns = "gray75", 
                       plotnames = TRUE, 
                       main = 'Loadings for variables on the factor plot for LV 1', 
                       ylab = "Signed Loadings"
                       #font.size = 1
                       )
  
loading2 <- PrettyBarPlot2(bootratio = c(pslist$Dim2, qslist$Dim2), 
                       threshold = min(c(th*max(abs(ps[,2])), th*max(abs(qs[,2])))), 
                       ylim = c(1.2*min(c(pslist$Dim2, qslist$Dim2)), 1.2*max(c(pslist$Dim2, qslist$Dim2))),
                       color4bar = c(colors4plsc$p.vec$Dim2, colors4plsc$q.vec$Dim2),
                       color4ns = "gray75", 
                       plotnames = TRUE, 
                       main = 'Loadings for variables on the factor plot for LV 2', 
                       ylab = "Signed Loadings",
                       #font.size = 1
                       )  
  

grid.arrange(as.grob(loading1),
             as.grob(loading2),
             ncol = 2,nrow = 1
             )

loads_plsc <- recordPlot()

```
  
  
# from supp materials

### Q

```{r Q.fi.table1}
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$fi) <- paste("Dim. ", c(1:27))

fi.caption.q1 <- "Row Factor Scores, Musical Qualities Survey, Dimensions 1:14"
fitable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fi[,1:14], 
                       caption = fi.caption.q1,
                       landscape = TRUE, font_size = "scriptsize")

write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$fi, file = "CSVS/Qualities_FI.csv")

#fitable.q1
```

```{r Q.fi.table2}
fi.caption.q2 <- "Row Factor Scores, Musical Qualities Survey, Dimensions 15 - 27"
fitable.q2 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fi[,15:27], 
                       caption = fi.caption.q2,
                       landscape = TRUE, font_size = "scriptsize")

#fitable.q2
```

```{r Q.fj.table1}
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$fj) <- paste("Dim. ", c(1:27))

fj.caption.q1 <- "Column Factor Scores, Musical Qualities Survey, Dimensions 1 - 14"
fjtable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fj[,1:14], 
                       caption = fj.caption.q1,
                       landscape = TRUE, font_size = "tiny")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$fj, file = "CSVS/Qualities_FJ.csv")
#fjtable.q1
```

```{r Q.fj.table2}
fj.caption.q2 <- "Column Factor Scores, Musical Qualities Survey, Dimensions 15 - 17"
fjtable.q2 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$fj[,15:27], 
                       caption = fj.caption.q2,
                       landscape = TRUE, font_size = "tiny")

#fjtable.q2
```

```{r Q.ci.table1}
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$ci) <- paste("Dim. ", c(1:27))

ci.caption.q1 <- "Unsigned Row Contributions, Musical Qualities Survey, Dimensions 1 - 14"
citable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$ci[,1:14], 
                       caption = ci.caption.q1,
                       landscape = TRUE, font_size = "scriptsize")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$ci, file = "CSVS/Qualities_CI.csv")
#citable.q1
```

```{r Q.ci.table2}
ci.caption.q2 <- "Unsigned Row Contributions, Musical Qualities Survey, Dimensions 15 - 27"
citable.q2 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$ci[,15:27], 
                       caption = ci.caption.q2,
                       landscape = TRUE, font_size = "scriptsize")
#citable.q2
```

```{r Q.cj.table1}
colnames(dimcares.inf$Fixed.Data$ExPosition.Data$cj) <- paste("Dim. ", c(1:27))

cj.caption.q1 <- "Unsigned Column Contributions, Musical Qualities Survey, Dimensions 1 - 14"
cjtable.q1 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$cj[,1:14], 
                       caption = cj.caption.q1,
                       landscape = TRUE, font_size = "tiny")
write.csv(dimcares.inf$Fixed.Data$ExPosition.Data$cj, file = "CSVS/Qualities_CJ.csv")
#cjtable.q1
```

```{r Q.cj.table2}
cj.caption.q2 <- "Unsigned Column Contributions, Musical Qualities Survey, Dimensions 15 - 27"
cjtable.q2 <- apa_table(dimcares.inf$Fixed.Data$ExPosition.Data$cj[,15:27], 
                       caption = cj.caption.q2,
                       landscape = TRUE, font_size = "tiny")
#cjtable.q2
```

```{r Q.booti.table}

bri.t.q <- bootRatios.I$boot.ratios
bri.t.q[is.nan(bri.t.q)] <- 0

bri.t.qsig <- bootRatios.I$prob.boot.ratios.corr
bri.t.qsig[is.nan(bri.t.qsig)] <- 1


bootswstars.QI <- matrix(paste(as.matrix(round(bri.t.q, 2)), as.matrix(add.significance.stars(bri.t.qsig))),
                        nrow = 3, ncol = 28)
colnames(bootswstars.QI) <- rownames(dimcares.inf$Fixed.Data$ExPosition.Data$fi)
rownames(bootswstars.QI) <- paste("Dim. ", c(1:3))
boots.caption.qi <- "Bootstrapped Row Factor Score Ratios for Dimensions 1 - 3"
boots.note.qi <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"

bootstable.qi <- apa_table(t(bootswstars.QI), caption = boots.caption.qi, note = boots.note.qi, 
                           landscape = F)

write.csv(bootswstars.QI, file = "CSVS/Qualities_BootI.csv")

#bootstable.qi
```

```{r Q.bootj.table}

brj.t.q <- bootRatios.J$boot.ratios
brj.t.q[is.nan(brj.t.q)] <- 0

brj.t.qsig <- bootRatios.J$prob.boot.ratios.corr
brj.t.qsig[is.nan(brj.t.qsig)] <- 1

bootswstars.QJ <- matrix(paste(as.matrix(round(brj.t.q, 2)), as.matrix(add.significance.stars(brj.t.qsig))),
                        nrow = 3, ncol = 60)
colnames(bootswstars.QJ) <- rownames(dimcares.inf$Fixed.Data$ExPosition.Data$fj)
rownames(bootswstars.QJ) <- paste("Dim. ", c(1:3))
boots.caption.qj <- "Bootstrapped Column Factor Score Ratios for Dimensions 1 - 3"
boots.note.qj <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"

bootstable.qj <- apa_table(t(bootswstars.QJ), caption = boots.caption.qj, note = boots.note.qj, 
                           landscape = F, font_size = "footnotesize")

write.csv(bootswstars.QJ, file = "CSVS/Qualities_BootJ.csv")

#bootstable.qj
```


## A



```{r A.fi.table1}
colnames(FIsym.adj) <- paste("Dim. ", c(1:28))

fi.caption.a1 <- "Row Factor Scores, Adjectives Survey, Dimensions 1 - 14"
fitable.a1 <- apa_table(FIsym.adj[,1:14], 
                       caption = fi.caption.a1,
                       landscape = TRUE, font_size = "footnotesize")

write.csv(FIsym.adj, file = "CSVS/Adjectives_FI.csv")

#fitable.a1
```

```{r A.fi.table2}
fi.caption.a2 <- "Row Factor Scores, Adjectives Survey, Dimensions 15 - 28"
fitable.a2 <- apa_table(FIsym.adj[,15:28], 
                       caption = fi.caption.a2,
                       landscape = TRUE, font_size = "footnotesize")

#fitable.a2
```

```{r A.fj.table1}
colnames(FJs.adj) <- paste("Dim. ", c(1:28))

fj.caption.a1 <- "Column Factor Scores, Adjectives Survey, Dimensions 1 - 14"
fjtable.a1 <- apa_table(FJs.adj[,1:14], 
                       caption = fj.caption.a1,
                       landscape = TRUE, font_size = "footnotesize")

write.csv(FJs.adj, file = "CSVS/Adjectives_FJ.csv")

#fjtable.a1
```

```{r A.fj.table2}
fj.caption.a2 <- "Column Factor Scores, Adjectives Survey, dimensions 15 - 28"
fjtable.a2 <- apa_table(FJs.adj[,15:28], 
                       caption = fj.caption.a2,
                       landscape = TRUE, font_size = "footnotesize")

#fjtable.a2
```



```{r A.ci.table1}
a.cis <- adjsym.cares$ExPosition.Data$ci

colnames(a.cis) <- paste("Dim. ", c(1:28))

ci.caption.a1 <- "Unsigned Row Contributions, Adjectives Survey, Dimensions 1 - 14"
citable.a1 <- apa_table(a.cis[,1:14], 
                       caption = ci.caption.a1,
                       landscape = TRUE, font_size = "footnotesize")
write.csv(a.cis, file = "CSVS/Adjectives_CI.csv")

#citable.a1
```

```{r A.ci.table2}
ci.caption.a2 <- "Unsigned Row Contributions, Adjectives Survey, Dimensions 15 - 28"
citable.a2 <- apa_table(a.cis[,15:28], 
                       caption = ci.caption.a2,
                       landscape = TRUE, font_size = "footnotesize")
#citable.a2
```


```{r A.cj.table1}
a.cjs <- adjsym.cares$ExPosition.Data$cj

colnames(a.cjs) <- paste("Dim. ", c(1:28))

cj.caption.a1 <- "Unsigned Column Contributions, Adjectives Survey, Dimensions 1 - 14"
cjtable.a1 <- apa_table(a.cjs[,1:14], 
                       caption = cj.caption.a1,
                       landscape = TRUE, font_size = "footnotesize")

write.csv(a.cjs, file = "CSVS/Adjectives_CJ.csv")

#cjtable.a1
```

```{r A.cj.table2}
cj.caption.a2 <- "Unsigned Column Contributions, Adjectives Survey, Dimensions 15 - 28"
cjtable.a2 <- apa_table(a.cjs[,15:28], 
                       caption = cj.caption.a2,
                       landscape = TRUE, font_size = "footnotesize")
#cjtable.a2
```

```{r A.booti.table}

bri.t.a <- bootRatadj.I$boot.ratios
bri.t.a[is.nan(bri.t.a)] <- 0

bri.t.asig <- bootRatadj.I$prob.boot.ratios.corr
bri.t.asig[is.nan(bri.t.asig)] <- 1


bootswstars.aI <- matrix(paste(as.matrix(round(bri.t.a, 2)), as.matrix(add.significance.stars(bri.t.asig))),
                        nrow = 3, ncol = 29)
colnames(bootswstars.aI) <- rownames(adjsym.cares$ExPosition.Data$fi)
rownames(bootswstars.aI) <- paste("Dim. ", c(1:3))
boots.caption.ai <- "Bootstrapped Row Factor Score Ratios for Dimensions 1 - 3"
boots.note.ai <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"

bootstable.ai <- apa_table(t(bootswstars.aI), caption = boots.caption.ai, note = boots.note.ai, 
                           landscape = F)

write.csv(bootswstars.aI, file = "CSVS/Adjectives_BootI.csv")

#bootstable.ai
```

```{r A.bootj.table}

brj.t.a <- bootRatadj.J$boot.ratios
brj.t.a[is.nan(brj.t.a)] <- 0

brj.t.asig <- bootRatadj.J$prob.boot.ratios.corr
brj.t.asig[is.nan(brj.t.asig)] <- 1

bootswstars.aJ <- matrix(paste(as.matrix(round(brj.t.a, 2)), as.matrix(add.significance.stars(brj.t.asig))),
                        nrow = 3, ncol = 33)
colnames(bootswstars.aJ) <- rownames(adjsym.cares$ExPosition.Data$fj)
rownames(bootswstars.aJ) <- paste("Dim. ", c(1:3))
boots.caption.aj <- "Bootstrapped Column Factor Score Ratios for Dimensions 1 - 3"
boots.note.aj <- "Stars indicate significance, Sidak/Bonferroni corrected. \n* < .05, ** < .01, *** < .001"

bootstable.aj <- apa_table(t(bootswstars.aJ), caption = boots.caption.aj, note = boots.note.aj, 
                           landscape = F)

write.csv(bootswstars.aJ, file = "CSVS/Adjectives_BootJ.csv")

#bootstable.aj
```




