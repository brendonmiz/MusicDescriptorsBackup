"0","# In order to make sure there are no duplicate words in the results, "
"0","# we change 'Moderate' under 'dynamics' to 'Mezzo'"
"0",""
"0","expertarray[,9,] <- gsub(unlist(expertarray[,9,]), fixed = T, "
"0","                         pattern = ""Moderate"", replacement = ""Mezzo"")"
"0",""
"0","# This line pulls out all unique responses from the entire array"
"0","theterms <- map(array_branch(expertarray, margin = 2), ~unique(as.vector(.)))"
"0",""
"0","# Because there are some responses that are CATA, there are a number of "
"0","# cells with multiple words in them, so we need to run this as well, "
"0","# which allows us to separate out individual words."
"0","theterms <- map(theterms, ~unique(unlist(strsplit(., "",""))))"
"0",""
"0","# We don't need these, because what we're really "
"0","# interested in is *what* the other item is. "
"0","wordstoremove <- c(""Other"", "" please specify:"", "" please specify"", "
"0","                   ""Not listed/other (please specify)"", "":"")"
"0",""
"0","for (i in 1:length(wordstoremove)){"
"0","  theterms <- map(theterms, ~str_remove_all(., coll(wordstoremove[i], "
"0","                                                    ignore_case = T)))"
"0","}"
"0",""
"0","# The loop above replaces the words with empty strings, "
"0","# and we don't want empty strings, so we take them out."
"0","theterms <- map(theterms, ~stri_remove_empty(., na_empty = T))"
"0",""
