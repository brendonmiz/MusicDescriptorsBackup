"0",""
"0","tocompareto <- unlist(colspecific, use.name = F)[-taketheseout]"
"0",""
"0","# Initialize the array of zeros "
"0","# that will be replaced with ones using the loop below."
"0","dimensionscontarray <- array(0, dim=c(30,"
"0","                                      length(allthecols),"
"0","                                      dim(expartdata)[1]+dim(expartdatafr)[1]), "
"0","                                 dimnames = list(therownames, "
"0","                                                 allthecols, "
"0","                                                 names(expertlist)))"
"0",""
"0","# Count all adjectives in each "
"0","for (k in 1:dim(expertarray)[3]){ # Cycle along pages the slowest"
"0","  for (j in 1:dim(expertarray)[2]){ # then along columns"
"0","    for (i in 1:dim(expertarray)[1]){ # then along rows"
"0","      for(l in 1:length(allthecols)){ # for each individual possible response"
"0","        if(stri_detect_fixed(expertarray[i,j,k], tocompareto[l]))"
"0","          "
"0","        dimensionscontarray[i,l,k] <- 1"
"0",""
"0","      } # ends the individual response comparison loop"
"0","    } #ends the row loop"
"0","  } # ends the column loop"
"0","} # ends the page loop"
"0","dimensionscontarray <- dimensionscontarray[,!stri_detect_fixed(colnames(dimensionscontarray), ""None""),]"
