"0","# We have a problem here because most matrices"
"0","#  have lines with zeros. A symmetric difference matrix "
"0","#  would do better than an RV or a "
"0","#  chi2 distance so we use createSymDist4PTCA"
"0",""
"0","Cmat.Q <- createSymDist4PTCA(thebrick)$CrossProduct"
"0",""
"0","# Calculate the eigenvalues and the percentage of variance extracted (tau)"
"0","eigenCmat.Q <- eigen(Cmat.Q, symmetric = TRUE)"
"0","eig4Cmat.Q <-  eigenCmat.Q$values"
"0","tau4Cmat.Q <- round( (100*eig4Cmat.Q) / sum(eig4Cmat.Q))"
"0",""
"0","# Calculate factor scores for the first three dimensions"
"0","nk       <- 3"
"0","F4Cmat.Q   <- eigenCmat.Q$vectors[,1:nk] %*% diag(eig4Cmat.Q[1:nk]^(1/2))"
"0",""
"0","# Prep for plotting"
"0","Shortnames4Participants.Q <-  dimnames(thebrick[[3]])"
"0","rownames(F4Cmat.Q) <- Shortnames4Participants.Q"
"0",""
"0","# Make labels"
"0","labels4RV.Q <- createxyLabels.gen(1,2,lambda = eig4Cmat.Q, tau = tau4Cmat.Q)"
