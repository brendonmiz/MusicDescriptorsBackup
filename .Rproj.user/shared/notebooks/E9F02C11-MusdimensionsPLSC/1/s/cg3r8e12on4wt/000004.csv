"0","# input - "
"0","# one or two vectors or matrices of loadings or contributions, etc, such as output from epPCA or similar"
"0","# set of colors equal to the number of matrices to be plotted x 2"
"0","# desired % of contributions to be displayed"
"0","# "
"0","#"
"0",""
"0","# output - Variables to input into the pretty bar plot function: "
"0","# 1) set of 'significant' loadings or contributions, "
"0","# 2) threshold,  "
"0","# 3) set of colors"
"0",""
"0","barplot.sigonly <- function(x, "
"0","                            y, "
"0","                            th, "
"0","                            type = c(""load"", ""cont""), "
"0","                            dims = 2, "
"0","                            colforthebars){"
"0","  "
"0","  if(is.null(dim(x)) && is.null(length(x))){return(""Please enter either a vector, matrix, or dataframe"")"
"0","      }else if(is.null(dim(x)) && length(x) > 1){"
"0","          dims = 1"
"0","          print(""Vector as input, returning only one dimension."")"
"0","          }"
"0","  "
"0","  if(dims > 8){return(""Do you really need to plot that many dimensions? Select a number less than 8"")}"
"0","  "
"0","  dimsvec <- c(""Dim1"", ""Dim2"", ""Dim3"", ""Dim4"", ""Dim5"", ""Dim6"", ""Dim7"", ""Dim8"") "
"0","  "
"0","  if(is.null(y)){"
"0",""
"0","      if(type == ""cont"" && th == ""mean""){"
"0","          if(sum(x[,1]) == 1){"
"0","              thr <- 1/nrow(x[,1])"
"0","              }"
"0","          else if(sum(x[,1]) == 100){"
"0","              thr <- 100/nrow(x[,1])"
"0","              }   "
"0","        } else {thr <- th/100}"
"0","              "
"0","    "
"0","    "
"0","    xslist <- vector(mode = ""list"", length = 2)"
"0","    names(xslist) <- dimsvec[1:dims]"
"0","    x.names <- rownames(x)"
"0","    colors4bars <- vector(mode = ""list"", length = 3)"
"0","    names(colors4bars) <- c(""colors"", ""x.all"",""x.vec"")"
"0","    "
"0","    colors4bars$colors <- wes_palettes$Darjeeling1[c(1,2)]"
"0","    "
"0","    for (i in 1:dims){"
"0","    xslist[[i]] <- x[which(abs(x[,i]) > thr*max(abs(x[,i]))),i]"
"0","    names(xlist[[i]]) <- x.names[abs(x[,i]) > thr*max(abs(x[,i]))]"
"0","    }"
"0",""
"0","    colors4bars$x.all <- x"
"0","    colors4bars$x.all[colors4bars$x.all > 0] <- colors4bars$colors[1]"
"0","    colors4bars$x.all[colors4bars$x.all != colors4bars$colors[1]] <- colors4bars$colors[2]"
"0",""
"0","    colors4bars$x.vec <- vector(mode = ""list"", length = 2)"
"0","  "
"0","    names(colors4bars$x.vec) <- names(xslist)"
"0","  "
"0","    for (i in 1:dim){"
"0","    colors4bars$x.vec[[i]] <- colors4bars$x.all[which(abs(x[,i]) > thr*max(abs(x[,i]))),i]"
"0","    }"
"0","    "
"0","  bp.sig <- list(""colordata"" = colors4bars, ""loadingsdata"" = pslist, ""t.hold"" = thr)"
"0","   "
"0","  return(bp.sig)"
"0","  "
"0","  }"
"0","  "
"0","        if(type == ""cont"" && th == ""mean""){"
"0","          if(sum(x[,1]) == 1){"
"0","              thr <- 1/nrow(x[,1])"
"0","              }"
"0","          else if(sum(x[,1]) == 100){"
"0","              thr <- 100/nrow(x[,1])"
"0","              }   "
"0","        } else {thr <- th/100}"
"0","  "
"0","  "
"0","  xslist <- vector(mode = ""list"", length = 2)"
"0","  yslist <- vector(mode = ""list"", length= 2)"
"0",""
"0","  names(xslist) <- dimsvec[1:dims]"
"0","  names(yslist) <- dimsvec[1:dims]"
"0",""
"0","  x.names <- rownames(x)"
"0","  y.names <- rownames(y)"
"0",""
"0","    for (i in 1:2){"
"0","        "
"0","      xslist[[i]] <- x[which(abs(x[,i]) > thr*max(abs(x[,i]))),i]"
"0","      yslist[[i]] <- y[which(abs(y[,i]) > thr*max(abs(y[,i]))),i]"
"0","      names(xslist[[i]]) <- x.names[abs(x[,i]) > thr*max(abs(x[,i]))]"
"0","      names(yslist[[i]]) <- y.names[abs(y[,i]) > thr*max(abs(y[,i]))]"
"0","  }"
"0",""
"0","  colors4bars <- vector(mode = ""list"", length = 5)"
"0","  names(colors4bars) <- c(""colors"", ""x.all"",""y.all"",""x.vec"", ""y.vec"" )"
"0",""
"0","  colors4bars$colors <- c(wes_palettes$Darjeeling1[c(1,2,4)],"
"0","                        wes_palettes$Darjeeling2[2])"
"0",""
"0","  colors4bars$x.all <- x"
"0","  colors4bars$x.all[colors4bars$x.all > 0] <- colors4bars$colors[1]"
"0","  colors4bars$x.all[colors4bars$x.all != colors4bars$colors[1]] <- colors4bars$colors[2]"
"0",""
"0","  colors4bars$y.all <- y"
"0","  colors4bars$y.all[colors4bars$y.all > 0] <- colors4bars$colors[3]"
"0","  colors4bars$y.all[colors4bars$y.all != colors4bars$colors[3]] <- colors4bars$colors[4]"
"0",""
"0","  colors4bars$x.vec <- vector(mode = ""list"", length = 2)"
"0","  colors4bars$y.vec <- vector(mode = ""list"", length = 2)"
"0",""
"0","  names(colors4bars$x.vec) <- dimsvec[1:dims]"
"0","  names(colors4bars$y.vec) <- dimsvec[1:dims]"
"0",""
"0",""
"0","  for (i in 1:2){"
"0","    colors4bars$x.vec[[i]] <- colors4bars$x.all[which(abs(x[,i]) > thr*max(abs(x[,i]))),i]"
"0","    colors4bars$y.vec[[i]] <- colors4bars$y.all[which(abs(y[,i]) > thr*max(abs(y[,i]))),i]"
"0","      }"
"0","  "
"0","  barsdata <- vector(mode = ""list"", length = dims)"
"0","  names(barsdata)  <- dimsvec[1:dims]"
"0","  for (i in 1:dims){"
"0","    barsdata[[i]] <- c(xslist[[i]], yslist[[i]])"
"0","  }"
"0","  "
"0","  bp.sig <- list(""colordata"" = colors4bars, ""barsdata"" = barsdata, ""t.hold"" = thr)"
"0","  "
"0","}"
"0",""
"0",""
